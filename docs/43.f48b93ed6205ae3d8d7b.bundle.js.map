{"version":3,"file":"43.f48b93ed6205ae3d8d7b.bundle.js","sources":["webpack:///./src/chapter4/5.ts"],"sourcesContent":["import * as THREE from 'three';\r\nimport * as Stats from 'stats.js';\r\nimport * as dat from 'dat.gui';\r\n\r\nexport default () => {\r\n  // 画面サイズ\r\n  const VIEWPORT_W = window.innerWidth;\r\n  const VIEWPORT_H = window.innerHeight;\r\n\r\n  /* scene */\r\n  const scene = new THREE.Scene();\r\n\r\n  /* camera */\r\n  const camera = new THREE.PerspectiveCamera(\r\n    45,\r\n    window.innerWidth / window.innerHeight,\r\n    0.1,\r\n    1000\r\n  );\r\n\r\n  camera.position.x = -30;\r\n  camera.position.y = 30;\r\n  camera.position.z = 30;\r\n  camera.lookAt(scene.position);\r\n\r\n  /* renderer */\r\n  const webGLRenderer = new THREE.WebGLRenderer();\r\n  webGLRenderer.setClearColor(new THREE.Color(0xeeeeee));\r\n  webGLRenderer.setSize(VIEWPORT_W, VIEWPORT_H);\r\n  webGLRenderer.shadowMap.enabled = false;\r\n\r\n  const planeGeometry = new THREE.PlaneGeometry(60, 40, 1, 1);\r\n  const planeMaterial = new THREE.MeshLambertMaterial({ color: 0xffffff });\r\n  const plane = new THREE.Mesh(planeGeometry, planeMaterial);\r\n  plane.receiveShadow = true;\r\n  plane.rotation.x = -0.5 * Math.PI;\r\n  plane.position.x = 0;\r\n  plane.position.y = -2;\r\n  plane.position.z = 0;\r\n  scene.add(plane);\r\n\r\n  const spotLight = new THREE.SpotLight(0xffffff);\r\n  spotLight.position.set(-40, 60, -10);\r\n  spotLight.castShadow = true;\r\n  scene.add(spotLight);\r\n\r\n  document.getElementById('WebGL-output').appendChild(webGLRenderer.domElement);\r\n\r\n  const group = new THREE.Group();\r\n  const mats: THREE.MeshBasicMaterial[] = [];\r\n  mats.push(new THREE.MeshBasicMaterial({ color: 0x009e60 }));\r\n  mats.push(new THREE.MeshBasicMaterial({ color: 0x009e60 }));\r\n  mats.push(new THREE.MeshBasicMaterial({ color: 0x0051ba }));\r\n  mats.push(new THREE.MeshBasicMaterial({ color: 0x0051ba }));\r\n  mats.push(new THREE.MeshBasicMaterial({ color: 0xffd500 }));\r\n  mats.push(new THREE.MeshBasicMaterial({ color: 0xffd500 }));\r\n  mats.push(new THREE.MeshBasicMaterial({ color: 0xff5800 }));\r\n  mats.push(new THREE.MeshBasicMaterial({ color: 0xff5800 }));\r\n  mats.push(new THREE.MeshBasicMaterial({ color: 0xc41e3a }));\r\n  mats.push(new THREE.MeshBasicMaterial({ color: 0xc41e3a }));\r\n  mats.push(new THREE.MeshBasicMaterial({ color: 0xffffff }));\r\n  mats.push(new THREE.MeshBasicMaterial({ color: 0xffffff }));\r\n  const faceMaterial = new THREE.MultiMaterial(mats);\r\n\r\n  for (let x = 0; x < 3; x++) {\r\n    for (let y = 0; y < 3; y++) {\r\n      for (let z = 0; z < 3; z++) {\r\n        const cubeGeom = new THREE.BoxGeometry(2.9, 2.9, 2.9);\r\n        const cube = new THREE.Mesh(cubeGeom, faceMaterial);\r\n        cube.position.set(x * 3 - 3, y * 3, z * 3 - 3);\r\n        group.add(cube);\r\n      }\r\n    }\r\n  }\r\n\r\n  scene.add(group);\r\n\r\n  /* stats */\r\n  const initStats = () => {\r\n    const statsObj = new Stats();\r\n    statsObj.showPanel(0);\r\n    statsObj.dom.style.position = 'absolute';\r\n    statsObj.dom.style.left = '0px';\r\n    statsObj.dom.style.top = '0px';\r\n    document.getElementById('Stats-output').appendChild(statsObj.dom);\r\n    return statsObj;\r\n  };\r\n  const stats = initStats();\r\n\r\n  /* gui */\r\n  const controls = {\r\n    rotationSpeed: 0.02,\r\n    numberOfObjects: scene.children.length\r\n  };\r\n\r\n  const gui = new dat.GUI();\r\n  gui.add(controls, 'rotationSpeed', 0, 0.5);\r\n\r\n  /* resize */\r\n  window.addEventListener(\r\n    'resize',\r\n    () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      webGLRenderer.setSize(window.innerWidth, window.innerHeight);\r\n    },\r\n    false\r\n  );\r\n\r\n  /* render */\r\n  let step = 0;\r\n  const renderScene = () => {\r\n    stats.update();\r\n\r\n    group.rotation.y = step += controls.rotationSpeed;\r\n\r\n    requestAnimationFrame(renderScene);\r\n    webGLRenderer.render(scene, camera);\r\n  };\r\n  renderScene();\r\n};\r\n"],"mappings":"AAAA","sourceRoot":""}