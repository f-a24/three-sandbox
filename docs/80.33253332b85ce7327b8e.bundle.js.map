{"version":3,"file":"80.33253332b85ce7327b8e.bundle.js","sources":["webpack:///./src/chapter1/README.md"],"sourcesContent":["module.exports = \"# 初めての Three.js【メモ】\\r\\n\\r\\nTypeScript x Webpack での挑戦\\r\\n\\r\\n## 1 章　初めての 3D シーン作成\\r\\n\\r\\n基本\\r\\n\\r\\n| オブジェクト | 説明                                                 |\\r\\n| :----------- | :--------------------------------------------------- |\\r\\n| scene        | 表示したい物体と光源を保持して変更を監視するコンテナ |\\r\\n| camera       | シーンを描画する時に何が見えるか決定                 |\\r\\n| renderer     | camera の角度に基づき scene がどのように見えるか決定 |\\r\\n| geometry     | 平面や立体などの物体（plane、sphere、cube）          |\\r\\n| material     | 物体の見た目                                         |\\r\\n| light        | 光源                                                 |\\r\\n\\r\\n基本的なマテリアル(THREE.MeshBasicMaterial)は光源に一切反応しない\\r\\n\\r\\n以下のマテリアルが Three.js で光源を計算に含めるもの\\r\\n\\r\\n- MeshLambertMaterial\\r\\n- MeshPhongMaterial\\r\\n- MeshStandardMaterial\\r\\n\\r\\n影の描画は大きな計算コストがかかるのでデフォルトは無効化\\r\\n\\r\\n有効化\\r\\n\\r\\n```js\\r\\nrenderer.shadowMap.enabled = true;\\r\\n// 物体ごとの設定も必要\\r\\nplane.receiveShadow = true;\\r\\ncube.castShadow = true;\\r\\n// 光源にも必要（すべての光源が影を落とせるわけではない）\\r\\nspotLight.castShadow = true;\\r\\n```\\r\\n\\r\\nアニメーションはブラウザが出来る限り滑らかかつ効率的に  \\r\\n描画することを保証する`requestAnimationFrame`を使用\\r\\n\\r\\n- stats.js 　 → 　 1 秒ごとのフレーム数を示してくれるライブラリ\\r\\n- dat.GUI 　 → 　単純な UI コンポーネントを簡単に作成するライブラリ\\r\\n\""],"mappings":"AAAA","sourceRoot":""}