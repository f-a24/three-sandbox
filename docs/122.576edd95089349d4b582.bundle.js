(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{366:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var three_module=__webpack_require__(718),stats_min=__webpack_require__(719),dat_gui_module=__webpack_require__(720),chroma=__webpack_require__(733),EffectComposer=__webpack_require__(728),RenderPass=__webpack_require__(729),ShaderPass=__webpack_require__(727),BleachBypassShader={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","\tvec4 base = texture2D( tDiffuse, vUv );","\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );","\tfloat lum = dot( lumCoeff, base.rgb );","\tvec3 blend = vec3( lum );","\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );","\tvec3 result1 = 2.0 * base.rgb * blend;","\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );","\tvec3 newColor = mix( result1, result2, L );","\tfloat A2 = opacity * base.a;","\tvec3 mixRGB = A2 * newColor.rgb;","\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );","\tgl_FragColor = vec4( mixRGB, base.a );","}"].join("\n")},FreiChenShader={uniforms:{tDiffuse:{value:null},aspect:{value:new three_module.Vector2(512,512)}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","varying vec2 vUv;","uniform vec2 aspect;","vec2 texel = vec2(1.0 / aspect.x, 1.0 / aspect.y);","mat3 G[9];","const mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );","const mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );","const mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );","const mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );","const mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );","const mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );","const mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );","const mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );","const mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );","void main(void)","{","\tG[0] = g0,","\tG[1] = g1,","\tG[2] = g2,","\tG[3] = g3,","\tG[4] = g4,","\tG[5] = g5,","\tG[6] = g6,","\tG[7] = g7,","\tG[8] = g8;","\tmat3 I;","\tfloat cnv[9];","\tvec3 sample;","\tfor (float i=0.0; i<3.0; i++) {","\t\tfor (float j=0.0; j<3.0; j++) {","\t\t\tsample = texture2D(tDiffuse, vUv + texel * vec2(i-1.0,j-1.0) ).rgb;","\t\t\tI[int(i)][int(j)] = length(sample);","\t\t}","\t}","\tfor (int i=0; i<9; i++) {","\t\tfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);","\t\tcnv[i] = dp3 * dp3;","\t}","\tfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);","\tfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);","\tgl_FragColor = vec4(vec3(sqrt(M/S)), 1.0);","}"].join("\n")},FXAAShader=__webpack_require__(778),FocusShader={uniforms:{tDiffuse:{value:null},screenWidth:{value:1024},screenHeight:{value:1024},sampleDistance:{value:.94},waveFactor:{value:.00125}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float screenWidth;","uniform float screenHeight;","uniform float sampleDistance;","uniform float waveFactor;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","\tvec4 color, org, tmp, add;","\tfloat sample_dist, f;","\tvec2 vin;","\tvec2 uv = vUv;","\tadd = color = org = texture2D( tDiffuse, uv );","\tvin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );","\tsample_dist = dot( vin, vin ) * 2.0;","\tf = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;","\tvec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );","\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );","\tif( tmp.b < color.b ) color = tmp;","\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );","\tif( tmp.b < color.b ) color = tmp;","\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );","\tif( tmp.b < color.b ) color = tmp;","\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );","\tif( tmp.b < color.b ) color = tmp;","\tadd += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );","\tif( tmp.b < color.b ) color = tmp;","\tadd += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );","\tif( tmp.b < color.b ) color = tmp;","\tadd += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );","\tif( tmp.b < color.b ) color = tmp;","\tcolor = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );","\tcolor = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );","\tgl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );","}"].join("\n")},CopyShader=__webpack_require__(725);__webpack_exports__.default=function(){var VIEWPORT_W=window.innerWidth,VIEWPORT_H=window.innerHeight,scene=new three_module.Scene,camera=new three_module.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3);camera.position.set(30,30,30),camera.lookAt(new three_module.Vector3(0,0,0));var renderer=new three_module.WebGLRenderer;renderer.setClearColor(new three_module.Color(11184895)),renderer.setSize(VIEWPORT_W,VIEWPORT_H),renderer.shadowMap.enabled=!0;var dirLight=new three_module.DirectionalLight(16777215);dirLight.position.set(30,30,30),dirLight.intensity=.8,scene.add(dirLight);var spotLight=new three_module.SpotLight(16777215);spotLight.castShadow=!0,spotLight.position.set(-30,30,-100),spotLight.target.position.x=-10,spotLight.target.position.z=-10,spotLight.intensity=.6,spotLight.shadow.mapSize.width=4096,spotLight.shadow.mapSize.height=4096,spotLight.shadow.camera.fov=120,spotLight.shadow.camera.near=1,spotLight.shadow.camera.far=200,scene.add(spotLight),document.getElementById("WebGL-output").appendChild(renderer.domElement);var plane=new three_module.BoxGeometry(1600,1600,.1,40,40),textureLoader=new three_module.TextureLoader,cube=new three_module.Mesh(plane,new three_module.MeshPhongMaterial({color:16777215,map:textureLoader.load("./assets/tex/floor-wood.jpg"),normalScale:new three_module.Vector2(.6,.6)}));cube.material.map.wrapS=three_module.RepeatWrapping,cube.material.map.wrapT=three_module.RepeatWrapping,cube.rotation.x=Math.PI/2,cube.material.map.repeat.set(80,80),cube.receiveShadow=!0,cube.position.z=-150,cube.position.x=-150,scene.add(cube);for(var scale=chroma.scale(["white","blue"]),i=-25;i<5;i++)for(var j=-15;j<15;j++){var cube_1=new three_module.Mesh(new three_module.BoxGeometry(3,4,3),new three_module.MeshPhongMaterial({color:scale(Math.random()).hex(),opacity:.8,transparent:!0}));cube_1.position.x=8*i+3*(Math.random()-.5),cube_1.position.z=8*j+3*(Math.random()-.5),cube_1.position.y=2*(Math.random()-.5),cube_1.castShadow=!0,scene.add(cube_1)}var bleachFilter=new ShaderPass.a(BleachBypassShader);bleachFilter.enabled=!1;var edgeShader=new ShaderPass.a(FreiChenShader);edgeShader.enabled=!1;var fxaaShader=new ShaderPass.a(FXAAShader.a);fxaaShader.enabled=!1;var focusShader=new ShaderPass.a(FocusShader);focusShader.enabled=!1;var renderPass=new RenderPass.a(scene,camera),effectCopy=new ShaderPass.a(CopyShader.a);effectCopy.renderToScreen=!0;var composer=new EffectComposer.a(renderer);composer.addPass(renderPass),composer.addPass(bleachFilter),composer.addPass(edgeShader),composer.addPass(fxaaShader),composer.addPass(focusShader),composer.addPass(effectCopy);var controls={bleachOpacity:1,bleach:!1,edgeDetect:!1,edgeAspect:512,FXAA:!1,focus:!1,sampleDistance:.94,waveFactor:.00125,screenWidth:VIEWPORT_W,screenHeight:VIEWPORT_H,onChange:function(){bleachFilter.enabled=controls.bleach,bleachFilter.uniforms.opacity.value=controls.bleachOpacity,edgeShader.enabled=controls.edgeDetect,edgeShader.uniforms.aspect.value=new three_module.Vector2(controls.edgeAspect,controls.edgeAspect),fxaaShader.enabled=controls.FXAA,fxaaShader.uniforms.resolution.value=new three_module.Vector2(1/window.innerWidth,1/window.innerHeight),focusShader.enabled=controls.focus,focusShader.uniforms.screenWidth.value=controls.screenWidth,focusShader.uniforms.screenHeight.value=controls.screenHeight,focusShader.uniforms.waveFactor.value=controls.waveFactor,focusShader.uniforms.sampleDistance.value=controls.sampleDistance}},gui=new dat_gui_module.a;gui.add(controls,"bleach").onChange(controls.onChange),gui.add(controls,"bleachOpacity",0,2).onChange(controls.onChange),gui.add(controls,"edgeDetect").onChange(controls.onChange),gui.add(controls,"edgeAspect",128,2048).step(128).onChange(controls.onChange),gui.add(controls,"FXAA").onChange(controls.onChange),gui.add(controls,"focus").onChange(controls.onChange),gui.add(controls,"sampleDistance",0,2).step(.01).onChange(controls.onChange),gui.add(controls,"waveFactor",0,.005).step(1e-4).onChange(controls.onChange);var statsObj,stats=((statsObj=new stats_min).showPanel(0),statsObj.dom.style.position="absolute",statsObj.dom.style.left="0px",statsObj.dom.style.top="0px",document.getElementById("Stats-output").appendChild(statsObj.dom),statsObj);window.addEventListener("resize",(function(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}),!1);var renderScene=function(){stats.update(),requestAnimationFrame(renderScene),composer.render()};renderScene()}}}]);
//# sourceMappingURL=122.576edd95089349d4b582.bundle.js.map