(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{357:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var three_module=__webpack_require__(710),stats_min=__webpack_require__(711),dat_gui_module=__webpack_require__(712),OrbitControls=__webpack_require__(715),SceneUtils=__webpack_require__(713),EffectComposer=__webpack_require__(719),FilmPass=__webpack_require__(733),RenderPass=__webpack_require__(720),ShaderPass=__webpack_require__(718),CopyShader=__webpack_require__(716),Pass=__webpack_require__(714),ConvolutionShader={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{value:null},uImageIncrement:{value:new three_module.Vector2(.001953125,0)},cKernel:{value:[]}},vertexShader:["uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","\tvUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float cKernel[ KERNEL_SIZE_INT ];","uniform sampler2D tDiffuse;","uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","\tvec2 imageCoord = vUv;","\tvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );","\tfor( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {","\t\tsum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];","\t\timageCoord += uImageIncrement;","\t}","\tgl_FragColor = sum;","}"].join("\n"),buildKernel:function(sigma){function gauss(x,sigma){return Math.exp(-x*x/(2*sigma*sigma))}var i,values,sum,halfWidth,kernelSize=2*Math.ceil(3*sigma)+1;for(kernelSize>25&&(kernelSize=25),halfWidth=.5*(kernelSize-1),values=new Array(kernelSize),sum=0,i=0;i<kernelSize;++i)values[i]=gauss(i-halfWidth,sigma),sum+=values[i];for(i=0;i<kernelSize;++i)values[i]/=sum;return values}},BloomPass=function(strength,kernelSize,sigma,resolution){Pass.a.call(this),strength=void 0!==strength?strength:1,kernelSize=void 0!==kernelSize?kernelSize:25,sigma=void 0!==sigma?sigma:4,resolution=void 0!==resolution?resolution:256;var pars={minFilter:three_module.LinearFilter,magFilter:three_module.LinearFilter,format:three_module.RGBAFormat};this.renderTargetX=new three_module.WebGLRenderTarget(resolution,resolution,pars),this.renderTargetX.texture.name="BloomPass.x",this.renderTargetY=new three_module.WebGLRenderTarget(resolution,resolution,pars),this.renderTargetY.texture.name="BloomPass.y",void 0===CopyShader.a&&console.error("BloomPass relies on CopyShader");var copyShader=CopyShader.a;this.copyUniforms=three_module.UniformsUtils.clone(copyShader.uniforms),this.copyUniforms.opacity.value=strength,this.materialCopy=new three_module.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:copyShader.vertexShader,fragmentShader:copyShader.fragmentShader,blending:three_module.AdditiveBlending,transparent:!0}),void 0===ConvolutionShader&&console.error("BloomPass relies on ConvolutionShader");var convolutionShader=ConvolutionShader;this.convolutionUniforms=three_module.UniformsUtils.clone(convolutionShader.uniforms),this.convolutionUniforms.uImageIncrement.value=BloomPass.blurX,this.convolutionUniforms.cKernel.value=ConvolutionShader.buildKernel(sigma),this.materialConvolution=new three_module.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:convolutionShader.vertexShader,fragmentShader:convolutionShader.fragmentShader,defines:{KERNEL_SIZE_FLOAT:kernelSize.toFixed(1),KERNEL_SIZE_INT:kernelSize.toFixed(0)}}),this.needsSwap=!1,this.fsQuad=new Pass.a.FullScreenQuad(null)};BloomPass.prototype=Object.assign(Object.create(Pass.a.prototype),{constructor:BloomPass,render:function(renderer,writeBuffer,readBuffer,deltaTime,maskActive){maskActive&&renderer.state.buffers.stencil.setTest(!1),this.fsQuad.material=this.materialConvolution,this.convolutionUniforms.tDiffuse.value=readBuffer.texture,this.convolutionUniforms.uImageIncrement.value=BloomPass.blurX,renderer.setRenderTarget(this.renderTargetX),renderer.clear(),this.fsQuad.render(renderer),this.convolutionUniforms.tDiffuse.value=this.renderTargetX.texture,this.convolutionUniforms.uImageIncrement.value=BloomPass.blurY,renderer.setRenderTarget(this.renderTargetY),renderer.clear(),this.fsQuad.render(renderer),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetY.texture,maskActive&&renderer.state.buffers.stencil.setTest(!0),renderer.setRenderTarget(readBuffer),this.clear&&renderer.clear(),this.fsQuad.render(renderer)}}),BloomPass.blurX=new three_module.Vector2(.001953125,0),BloomPass.blurY=new three_module.Vector2(0,.001953125);var DotScreenShader={uniforms:{tDiffuse:{value:null},tSize:{value:new three_module.Vector2(256,256)},center:{value:new three_module.Vector2(.5,.5)},angle:{value:1.57},scale:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec2 center;","uniform float angle;","uniform float scale;","uniform vec2 tSize;","uniform sampler2D tDiffuse;","varying vec2 vUv;","float pattern() {","\tfloat s = sin( angle ), c = cos( angle );","\tvec2 tex = vUv * tSize - center;","\tvec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;","\treturn ( sin( point.x ) * sin( point.y ) ) * 4.0;","}","void main() {","\tvec4 color = texture2D( tDiffuse, vUv );","\tfloat average = ( color.r + color.g + color.b ) / 3.0;","\tgl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );","}"].join("\n")},DotScreenPass=function(center,angle,scale){Pass.a.call(this),void 0===DotScreenShader&&console.error("DotScreenPass relies on DotScreenShader");var shader=DotScreenShader;this.uniforms=three_module.UniformsUtils.clone(shader.uniforms),void 0!==center&&this.uniforms.center.value.copy(center),void 0!==angle&&(this.uniforms.angle.value=angle),void 0!==scale&&(this.uniforms.scale.value=scale),this.material=new three_module.ShaderMaterial({uniforms:this.uniforms,vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader}),this.fsQuad=new Pass.a.FullScreenQuad(this.material)};DotScreenPass.prototype=Object.assign(Object.create(Pass.a.prototype),{constructor:DotScreenPass,render:function(renderer,writeBuffer,readBuffer){this.uniforms.tDiffuse.value=readBuffer.texture,this.uniforms.tSize.value.set(readBuffer.width,readBuffer.height),this.renderToScreen?(renderer.setRenderTarget(null),this.fsQuad.render(renderer)):(renderer.setRenderTarget(writeBuffer),this.clear&&renderer.clear(),this.fsQuad.render(renderer))}});var TexturePass=function(map,opacity){Pass.a.call(this),void 0===CopyShader.a&&console.error("TexturePass relies on CopyShader");var shader=CopyShader.a;this.map=map,this.opacity=void 0!==opacity?opacity:1,this.uniforms=three_module.UniformsUtils.clone(shader.uniforms),this.material=new three_module.ShaderMaterial({uniforms:this.uniforms,vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader,depthTest:!1,depthWrite:!1}),this.needsSwap=!1,this.fsQuad=new Pass.a.FullScreenQuad(null)};TexturePass.prototype=Object.assign(Object.create(Pass.a.prototype),{constructor:TexturePass,render:function(renderer,writeBuffer,readBuffer){var oldAutoClear=renderer.autoClear;renderer.autoClear=!1,this.fsQuad.material=this.material,this.uniforms.opacity.value=this.opacity,this.uniforms.tDiffuse.value=this.map,this.material.transparent=this.opacity<1,renderer.setRenderTarget(this.renderToScreen?null:readBuffer),this.clear&&renderer.clear(),this.fsQuad.render(renderer),renderer.autoClear=oldAutoClear}});__webpack_exports__.default=function(){var VIEWPORT_W=window.innerWidth,VIEWPORT_H=window.innerHeight,scene=new three_module.Scene,camera=new three_module.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3);camera.position.set(-10,15,25),camera.lookAt(new three_module.Vector3(0,0,0));var renderer=new three_module.WebGLRenderer;renderer.setClearColor(new three_module.Color(0)),renderer.setSize(VIEWPORT_W,VIEWPORT_H),renderer.shadowMap.enabled=!0;var orbitControls=new OrbitControls.a(camera);orbitControls.autoRotate=!1;var clock=new three_module.Clock,ambi=new three_module.AmbientLight(6842472);scene.add(ambi);var spotLight=new three_module.SpotLight(16777215);spotLight.position.set(550,100,550),spotLight.intensity=.6,scene.add(spotLight),document.getElementById("WebGL-output").appendChild(renderer.domElement);var geom,textureLoader,planetTexture,specularTexture,normalTexture,planetMaterial,sphere=(geom=new three_module.SphereGeometry(10,40,40),textureLoader=new three_module.TextureLoader,planetTexture=textureLoader.load("./assets/Earth.png"),specularTexture=textureLoader.load("./assets/EarthSpec.png"),normalTexture=textureLoader.load("./assets/EarthNormal.png"),(planetMaterial=new three_module.MeshPhongMaterial).specularMap=specularTexture,planetMaterial.specular=new three_module.Color(4474026),planetMaterial.normalMap=normalTexture,planetMaterial.map=planetTexture,SceneUtils.a.createMultiMaterialObject(geom,[planetMaterial]));scene.add(sphere);var renderPass=new RenderPass.a(scene,camera),effectCopy=new ShaderPass.a(CopyShader.a);effectCopy.renderToScreen=!0;var bloomPass=new BloomPass(3,25,5,256),effectFilm=new FilmPass.a(.8,.325,256,0);effectFilm.renderToScreen=!0;var dotScreenPass=new DotScreenPass,composer=new EffectComposer.a(renderer);composer.addPass(renderPass),composer.addPass(effectCopy);var renderScene=new TexturePass(composer.renderTarget2.texture),composer1=new EffectComposer.a(renderer);composer1.addPass(renderScene),composer1.addPass(dotScreenPass),composer1.addPass(effectCopy);var composer2=new EffectComposer.a(renderer);composer2.addPass(renderScene),composer2.addPass(effectCopy);var composer3=new EffectComposer.a(renderer);composer3.addPass(renderScene),composer3.addPass(bloomPass),composer3.addPass(effectCopy);var composer4=new EffectComposer.a(renderer);composer4.addPass(renderScene),composer4.addPass(effectFilm);var controls={scanlinesCount:256,grayscale:!1,scanlinesIntensity:.3,noiseIntensity:.8,strength:3,kernelSize:25,sigma:5,resolution:256,centerX:.5,centerY:.5,angle:1.57,scale:1,updateEffectFilm:function(){effectFilm.uniforms.grayscale.value=controls.grayscale,effectFilm.uniforms.nIntensity.value=controls.noiseIntensity,effectFilm.uniforms.sIntensity.value=controls.scanlinesIntensity,effectFilm.uniforms.sCount.value=controls.scanlinesCount},updateDotScreen:function(){var dotScreenPass=new DotScreenPass(new three_module.Vector2(controls.centerX,controls.centerY),controls.angle,controls.scale);(composer1=new EffectComposer.a(renderer)).addPass(renderScene),composer1.addPass(dotScreenPass),composer1.addPass(effectCopy)},updateEffectBloom:function(){bloomPass=new BloomPass(controls.strength,controls.kernelSize,controls.sigma,controls.resolution),(composer3=new EffectComposer.a(renderer)).addPass(renderScene),composer3.addPass(bloomPass),composer3.addPass(effectCopy)}},gui=new dat_gui_module.a,bpFolder=gui.addFolder("BloomPass");bpFolder.add(controls,"strength",1,10).onChange(controls.updateEffectBloom),bpFolder.add(controls,"kernelSize",1,100).onChange(controls.updateEffectBloom),bpFolder.add(controls,"sigma",1,10).onChange(controls.updateEffectBloom),bpFolder.add(controls,"resolution",0,1024).onChange(controls.updateEffectBloom);var fpFolder=gui.addFolder("FilmPass");fpFolder.add(controls,"scanlinesIntensity",0,1).onChange(controls.updateEffectFilm),fpFolder.add(controls,"noiseIntensity",0,3).onChange(controls.updateEffectFilm),fpFolder.add(controls,"grayscale").onChange(controls.updateEffectFilm),fpFolder.add(controls,"scanlinesCount",0,2048).step(1).onChange(controls.updateEffectFilm);var dsFolder=gui.addFolder("DotScreenPass");dsFolder.add(controls,"centerX",0,1).onChange(controls.updateDotScreen),dsFolder.add(controls,"centerY",0,1).onChange(controls.updateDotScreen),dsFolder.add(controls,"angle",0,3.14).onChange(controls.updateDotScreen),dsFolder.add(controls,"scale",0,10).onChange(controls.updateDotScreen);var statsObj,stats=((statsObj=new stats_min).showPanel(0),statsObj.dom.style.position="absolute",statsObj.dom.style.left="0px",statsObj.dom.style.top="0px",document.getElementById("Stats-output").appendChild(statsObj.dom),statsObj);window.addEventListener("resize",(function(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}),!1);var halfWidth=(VIEWPORT_W||2)/2,halfHeight=(VIEWPORT_H||2)/2,render=function(){stats.update();var delta=clock.getDelta();orbitControls.update(),sphere.rotation.y+=.002,requestAnimationFrame(render),renderer.autoClear=!1,renderer.clear(),renderer.setViewport(0,0,2*halfWidth,2*halfHeight),composer.render(delta),renderer.setViewport(0,0,halfWidth,halfHeight),composer1.render(delta),renderer.setViewport(halfWidth,0,halfWidth,halfHeight),composer2.render(delta),renderer.setViewport(0,halfHeight,halfWidth,halfHeight),composer3.render(delta),renderer.setViewport(halfWidth,halfHeight,halfWidth,halfHeight),composer4.render(delta)};render()}}}]);
//# sourceMappingURL=110.591c2c407b4691f5f6cc.bundle.js.map