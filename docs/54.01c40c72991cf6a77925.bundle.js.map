{"version":3,"file":"54.01c40c72991cf6a77925.bundle.js","sources":["webpack:///./src/chapter4/8-4.frag"],"sourcesContent":["export default \"#define GLSLIFY 1\\nuniform float time;\\nuniform vec2 resolution;\\n\\nvec2 rand(vec2 pos)\\n{\\nreturn\\nfract(\\n(\\npow(\\npos+2.0,\\npos.yx+2.0\\n)*555555.0\\n)\\n);\\n}\\n\\nvec2 rand2(vec2 pos)\\n{\\nreturn rand(rand(pos));\\n}\\n\\nfloat softnoise(vec2 pos, float scale) {\\nvec2 smplpos = pos * scale;\\nfloat c0 = rand2((floor(smplpos) + vec2(0.0, 0.0)) / scale).x;\\nfloat c1 = rand2((floor(smplpos) + vec2(1.0, 0.0)) / scale).x;\\nfloat c2 = rand2((floor(smplpos) + vec2(0.0, 1.0)) / scale).x;\\nfloat c3 = rand2((floor(smplpos) + vec2(1.0, 1.0)) / scale).x;\\n\\nvec2 a = fract(smplpos);\\nreturn mix(mix(c0, c1, smoothstep(0.0, 1.0, a.x)),\\nmix(c2, c3, smoothstep(0.0, 1.0, a.x)),\\nsmoothstep(0.0, 1.0, a.x));\\n}\\n\\nvoid main( void ) {\\nvec2 pos = gl_FragCoord.xy / resolution.y - time * 0.4;\\n\\nfloat color = 0.0;\\nfloat s = 1.0;\\nfor (int i = 0; i < 6; ++i) {\\ncolor += softnoise(pos + vec2(0.01 * float(i)), s * 4.0) / s / 2.0;\\ns *= 2.0;\\n}\\ngl_FragColor = vec4(color,mix(color,cos(color),sin(color)),color,1);\\n}\\n\""],"mappings":"AAAA","sourceRoot":""}