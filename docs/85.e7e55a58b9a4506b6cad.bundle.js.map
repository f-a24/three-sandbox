{"version":3,"file":"85.e7e55a58b9a4506b6cad.bundle.js","sources":["webpack:///./src/chapter8/15.ts"],"sourcesContent":["import * as THREE from 'three';\r\nimport * as Stats from 'stats.js';\r\nimport { OrbitControls } from '../../node_modules/three/examples/jsm/controls/OrbitControls';\r\nimport { VRMLLoader } from '../../node_modules/three/examples/jsm/loaders/VRMLLoader';\r\n\r\nexport default () => {\r\n  // 画面サイズ\r\n  const VIEWPORT_W = window.innerWidth;\r\n  const VIEWPORT_H = window.innerHeight;\r\n\r\n  /* scene */\r\n  const scene = new THREE.Scene();\r\n\r\n  /* camera */\r\n  const camera = new THREE.PerspectiveCamera(\r\n    45,\r\n    VIEWPORT_W / VIEWPORT_H,\r\n    0.1,\r\n    1000\r\n  );\r\n  camera.position.x = 30;\r\n  camera.position.y = 30;\r\n  camera.position.z = 30;\r\n  camera.lookAt(new THREE.Vector3(0, 0, 0));\r\n\r\n  const orbit = new OrbitControls(camera);\r\n\r\n  const dir1 = new THREE.DirectionalLight(0.4);\r\n  dir1.position.set(-30, 30, -30);\r\n  scene.add(dir1);\r\n\r\n  const dir2 = new THREE.DirectionalLight(0.4);\r\n  dir2.position.set(-30, 30, 30);\r\n  scene.add(dir2);\r\n\r\n  const dir3 = new THREE.DirectionalLight(0.4);\r\n  dir3.position.set(30, 30, -30);\r\n  scene.add(dir3);\r\n\r\n  // spotlight\r\n  const spotLight = new THREE.SpotLight(0xffffff);\r\n  spotLight.position.set(30, 30, 30);\r\n  scene.add(spotLight);\r\n\r\n  /* renderer */\r\n  const renderer = new THREE.WebGLRenderer();\r\n  renderer.setClearColor(new THREE.Color(0x000000));\r\n  renderer.setSize(VIEWPORT_W, VIEWPORT_H);\r\n  renderer.shadowMap.enabled = true;\r\n\r\n  document.getElementById('WebGL-output').appendChild(renderer.domElement);\r\n\r\n  const loader = new VRMLLoader();\r\n  let group = new THREE.Object3D();\r\n  loader.load('./assets/tree.wrl', (model: THREE.Object3D) => {\r\n    model.scale.set(10, 10, 10);\r\n    scene.add(model);\r\n  });\r\n\r\n  /* stats */\r\n  const initStats = () => {\r\n    const statsObj = new Stats();\r\n    statsObj.showPanel(0);\r\n    statsObj.dom.style.position = 'absolute';\r\n    statsObj.dom.style.left = '0px';\r\n    statsObj.dom.style.top = '0px';\r\n    document.getElementById('Stats-output').appendChild(statsObj.dom);\r\n    return statsObj;\r\n  };\r\n  const stats = initStats();\r\n\r\n  /* resize */\r\n  window.addEventListener(\r\n    'resize',\r\n    () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    },\r\n    false\r\n  );\r\n\r\n  /* render */\r\n  const renderScene = () => {\r\n    stats.update();\r\n\r\n    orbit.update();\r\n\r\n    if (group) {\r\n      group.rotation.y += 0.006;\r\n    }\r\n\r\n    requestAnimationFrame(renderScene);\r\n    renderer.render(scene, camera);\r\n  };\r\n  renderScene();\r\n};\r\n"],"mappings":"AAAA","sourceRoot":""}