(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{341:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="#define GLSLIFY 1\nuniform vec2 resolution;\nuniform float time;\n\nvec2 rand(vec2 pos)\n{\nreturn fract( 0.00005 * (pow(pos+2.0, pos.yx + 1.0) * 22222.0));\n}\nvec2 rand2(vec2 pos)\n{\nreturn rand(rand(pos));\n}\n\nfloat softnoise(vec2 pos, float scale)\n{\nvec2 smplpos = pos * scale;\nfloat c0 = rand2((floor(smplpos) + vec2(0.0, 0.0)) / scale).x;\nfloat c1 = rand2((floor(smplpos) + vec2(1.0, 0.0)) / scale).x;\nfloat c2 = rand2((floor(smplpos) + vec2(0.0, 1.0)) / scale).x;\nfloat c3 = rand2((floor(smplpos) + vec2(1.0, 1.0)) / scale).x;\n\nvec2 a = fract(smplpos);\nreturn mix(\nmix(c0, c1, smoothstep(0.0, 1.0, a.x)),\nmix(c2, c3, smoothstep(0.0, 1.0, a.x)),\nsmoothstep(0.0, 1.0, a.y));\n}\n\nvoid main(void)\n{\nvec2 pos = gl_FragCoord.xy / resolution.y;\npos.x += time * 0.1;\nfloat color = 0.0;\nfloat s = 1.0;\nfor(int i = 0; i < 8; i++)\n{\ncolor += softnoise(pos+vec2(i)*0.02, s * 4.0) / s / 2.0;\ns *= 2.0;\n}\ngl_FragColor = vec4(color);\n}\n"}}]);
//# sourceMappingURL=53.01c40c72991cf6a77925.bundle.js.map