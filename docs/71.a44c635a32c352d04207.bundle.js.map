{"version":3,"file":"71.a44c635a32c352d04207.bundle.js","sources":["webpack:///./src/chapter4/8-2.frag"],"sourcesContent":["export default \"#define GLSLIFY 1\\n// from http://glsl.heroku.com/e#7906.0\\nuniform float time;\\nuniform vec2 resolution;\\n\\n// 2013-03-30 by @hintz\\n#define CGFloat float\\n#define M_PI 3.14159265359\\n\\nvec3 hsvtorgb(float h, float s, float v)\\n{\\nfloat c = v * s;\\nh = mod((h * 6.0), 6.0);\\nfloat x = c * (1.0 - abs(mod(h, 2.0) - 1.0));\\nvec3 color;\\n\\nif (0.0 <= h && h < 1.0)\\n{\\ncolor = vec3(c, x, 0.0);\\n}\\nelse if (1.0 <= h && h < 2.0)\\n{\\ncolor = vec3(x, c, 0.0);\\n}\\nelse if (2.0 <= h && h < 3.0)\\n{\\ncolor = vec3(0.0, c, x);\\n}\\nelse if (3.0 <= h && h < 4.0)\\n{\\ncolor = vec3(0.0, x, c);\\n}\\nelse if (4.0 <= h && h < 5.0)\\n{\\ncolor = vec3(x, 0.0, c);\\n}\\nelse if (5.0 <= h && h < 6.0)\\n{\\ncolor = vec3(c, 0.0, x);\\n}\\nelse\\n{\\ncolor = vec3(0.0);\\n}\\n\\ncolor += v - c;\\n\\nreturn color;\\n}\\n\\nvoid main(void)\\n{\\n\\nvec2 position = (gl_FragCoord.xy - 0.5 * resolution) / resolution.y;\\nfloat x = position.x;\\nfloat y = position.y;\\n\\nCGFloat a = atan(x, y);\\n\\nCGFloat d = sqrt(x*x+y*y);\\nCGFloat d0 = 0.5*(sin(d-time)+1.5)*d;\\nCGFloat d1 = 5.0;\\n\\nCGFloat u = mod(a*d1+sin(d*10.0+time), M_PI*2.0)/M_PI*0.5 - 0.5;\\nCGFloat v = mod(pow(d0*4.0, 0.75),1.0) - 0.5;\\n\\nCGFloat dd = sqrt(u*u+v*v);\\n\\nCGFloat aa = atan(u, v);\\n\\nCGFloat uu = mod(aa*3.0+3.0*cos(dd*30.0-time), M_PI*2.0)/M_PI*0.5 - 0.5;\\n// CGFloat vv = mod(dd*4.0,1.0) - 0.5;\\n\\nCGFloat d2 = sqrt(uu*uu+v*v)*1.5;\\n\\ngl_FragColor = vec4( hsvtorgb(dd+time*0.5/d1, sin(dd*time), d2), 1.0 );\\n}\\n\""],"mappings":"AAAA","sourceRoot":""}