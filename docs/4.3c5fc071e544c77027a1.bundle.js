(window.webpackJsonp=window.webpackJsonp||[]).push([[4,103,104,105,106,107,108,109],{163:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var three__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(386),stats_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(385),vertShaderModule=__webpack_require__(370),fragmentShader1=__webpack_require__(364),fragmentShader2=__webpack_require__(365),fragmentShader3=__webpack_require__(366),fragmentShader4=__webpack_require__(367),fragmentShader5=__webpack_require__(368),fragmentShader6=__webpack_require__(369);__webpack_exports__.default=function(){var VIEWPORT_W=window.innerWidth,VIEWPORT_H=window.innerHeight,scene=new three__WEBPACK_IMPORTED_MODULE_0__.Scene,camera=new three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3);camera.position.x=30,camera.position.y=30,camera.position.z=30,camera.lookAt(new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0));var webGLRenderer=new three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderer;webGLRenderer.setClearColor(new three__WEBPACK_IMPORTED_MODULE_0__.Color(0)),webGLRenderer.setSize(VIEWPORT_W,VIEWPORT_H),webGLRenderer.shadowMap.enabled=!0;var createMaterial=function(vertShader,fragShader){var uniforms={time:{type:"f",value:.2},scale:{type:"f",value:.2},alpha:{type:"f",value:.6},resolution:{type:"v2",value:new three__WEBPACK_IMPORTED_MODULE_0__.Vector2}};return uniforms.resolution.value.x=window.innerWidth,uniforms.resolution.value.y=window.innerHeight,new three__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial({uniforms:uniforms,vertexShader:vertShader,fragmentShader:fragShader,transparent:!0})},cubeGeometry=new three__WEBPACK_IMPORTED_MODULE_0__.BoxGeometry(20,20,20),meshMaterial1=createMaterial(vertShaderModule.default,fragmentShader1.default),meshMaterial2=createMaterial(vertShaderModule.default,fragmentShader2.default),meshMaterial3=createMaterial(vertShaderModule.default,fragmentShader3.default),meshMaterial4=createMaterial(vertShaderModule.default,fragmentShader4.default),meshMaterial5=createMaterial(vertShaderModule.default,fragmentShader5.default),meshMaterial6=createMaterial(vertShaderModule.default,fragmentShader6.default),cube=new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(cubeGeometry,[meshMaterial1,meshMaterial2,meshMaterial3,meshMaterial4,meshMaterial5,meshMaterial6]);scene.add(cube);var ambientLight=new three__WEBPACK_IMPORTED_MODULE_0__.AmbientLight(789516);scene.add(ambientLight);var spotLight=new three__WEBPACK_IMPORTED_MODULE_0__.SpotLight(16777215);spotLight.position.set(-40,60,-10),spotLight.castShadow=!0,scene.add(spotLight),document.getElementById("WebGL-output").appendChild(webGLRenderer.domElement);var statsObj,stats=((statsObj=new stats_js__WEBPACK_IMPORTED_MODULE_1__).showPanel(0),statsObj.dom.style.position="absolute",statsObj.dom.style.left="0px",statsObj.dom.style.top="0px",document.getElementById("Stats-output").appendChild(statsObj.dom),statsObj);window.addEventListener("resize",function(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),webGLRenderer.setSize(window.innerWidth,window.innerHeight)},!1);var step=0,renderScene=function(){stats.update(),cube.rotation.y=step+=.01,cube.rotation.x=step,cube.rotation.z=step,cube.material.forEach(function(m){m.uniforms.time.value+=.01}),requestAnimationFrame(renderScene),webGLRenderer.render(scene,camera)};renderScene()}},364:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="precision highp float;\n#define GLSLIFY 1\nuniform float time;\nuniform float alpha;\nuniform vec2 resolution;\nvarying vec2 vUv;\n\nvoid main2(void)\n{\nvec2 position = vUv;\nfloat red = 1.0;\nfloat green = 0.25 + sin(time) * 0.25;\nfloat blue = 0.0;\nvec3 rgb = vec3(red, green, blue);\nvec4 color = vec4(rgb, alpha);\ngl_FragColor = color;\n}\n\n#define PI 3.14159\n#define TWO_PI (PI*2.0)\n#define N 68.5\n\nvoid main(void)\n{\nvec2 center = (gl_FragCoord.xy);\ncenter.x=-10.12*sin(time/200.0);\ncenter.y=-10.12*cos(time/200.0);\nvec2 v = (gl_FragCoord.xy - resolution/20.0) / min(resolution.y,resolution.x) * 15.0;\nv.x=v.x-10.0;\nv.y=v.y-200.0;\nfloat col = 0.0;\nfor(float i = 0.0; i < N; i++)\n{\nfloat a = i * (TWO_PI/N) * 61.95;\ncol += cos(TWO_PI*(v.y * cos(a) + v.x * sin(a) + sin(time*0.004)*100.0 ));\n}\ncol /= 5.0;\ngl_FragColor = vec4(col*1.0, -col*1.0,-col*4.0, 1.0);\n}\n"},365:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="#define GLSLIFY 1\n// from http://glsl.heroku.com/e#7906.0\nuniform float time;\nuniform vec2 resolution;\n\n// 2013-03-30 by @hintz\n#define CGFloat float\n#define M_PI 3.14159265359\n\nvec3 hsvtorgb(float h, float s, float v)\n{\nfloat c = v * s;\nh = mod((h * 6.0), 6.0);\nfloat x = c * (1.0 - abs(mod(h, 2.0) - 1.0));\nvec3 color;\n\nif (0.0 <= h && h < 1.0)\n{\ncolor = vec3(c, x, 0.0);\n}\nelse if (1.0 <= h && h < 2.0)\n{\ncolor = vec3(x, c, 0.0);\n}\nelse if (2.0 <= h && h < 3.0)\n{\ncolor = vec3(0.0, c, x);\n}\nelse if (3.0 <= h && h < 4.0)\n{\ncolor = vec3(0.0, x, c);\n}\nelse if (4.0 <= h && h < 5.0)\n{\ncolor = vec3(x, 0.0, c);\n}\nelse if (5.0 <= h && h < 6.0)\n{\ncolor = vec3(c, 0.0, x);\n}\nelse\n{\ncolor = vec3(0.0);\n}\n\ncolor += v - c;\n\nreturn color;\n}\n\nvoid main(void)\n{\n\nvec2 position = (gl_FragCoord.xy - 0.5 * resolution) / resolution.y;\nfloat x = position.x;\nfloat y = position.y;\n\nCGFloat a = atan(x, y);\n\nCGFloat d = sqrt(x*x+y*y);\nCGFloat d0 = 0.5*(sin(d-time)+1.5)*d;\nCGFloat d1 = 5.0;\n\nCGFloat u = mod(a*d1+sin(d*10.0+time), M_PI*2.0)/M_PI*0.5 - 0.5;\nCGFloat v = mod(pow(d0*4.0, 0.75),1.0) - 0.5;\n\nCGFloat dd = sqrt(u*u+v*v);\n\nCGFloat aa = atan(u, v);\n\nCGFloat uu = mod(aa*3.0+3.0*cos(dd*30.0-time), M_PI*2.0)/M_PI*0.5 - 0.5;\n// CGFloat vv = mod(dd*4.0,1.0) - 0.5;\n\nCGFloat d2 = sqrt(uu*uu+v*v)*1.5;\n\ngl_FragColor = vec4( hsvtorgb(dd+time*0.5/d1, sin(dd*time), d2), 1.0 );\n}\n"},366:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="#define GLSLIFY 1\nuniform vec2 resolution;\nuniform float time;\n\nvec2 rand(vec2 pos)\n{\nreturn fract( 0.00005 * (pow(pos+2.0, pos.yx + 1.0) * 22222.0));\n}\nvec2 rand2(vec2 pos)\n{\nreturn rand(rand(pos));\n}\n\nfloat softnoise(vec2 pos, float scale)\n{\nvec2 smplpos = pos * scale;\nfloat c0 = rand2((floor(smplpos) + vec2(0.0, 0.0)) / scale).x;\nfloat c1 = rand2((floor(smplpos) + vec2(1.0, 0.0)) / scale).x;\nfloat c2 = rand2((floor(smplpos) + vec2(0.0, 1.0)) / scale).x;\nfloat c3 = rand2((floor(smplpos) + vec2(1.0, 1.0)) / scale).x;\n\nvec2 a = fract(smplpos);\nreturn mix(\nmix(c0, c1, smoothstep(0.0, 1.0, a.x)),\nmix(c2, c3, smoothstep(0.0, 1.0, a.x)),\nsmoothstep(0.0, 1.0, a.y));\n}\n\nvoid main(void)\n{\nvec2 pos = gl_FragCoord.xy / resolution.y;\npos.x += time * 0.1;\nfloat color = 0.0;\nfloat s = 1.0;\nfor(int i = 0; i < 8; i++)\n{\ncolor += softnoise(pos+vec2(i)*0.02, s * 4.0) / s / 2.0;\ns *= 2.0;\n}\ngl_FragColor = vec4(color);\n}\n"},367:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="#define GLSLIFY 1\nuniform float time;\nuniform vec2 resolution;\n\nvec2 rand(vec2 pos)\n{\nreturn\nfract(\n(\npow(\npos+2.0,\npos.yx+2.0\n)*555555.0\n)\n);\n}\n\nvec2 rand2(vec2 pos)\n{\nreturn rand(rand(pos));\n}\n\nfloat softnoise(vec2 pos, float scale) {\nvec2 smplpos = pos * scale;\nfloat c0 = rand2((floor(smplpos) + vec2(0.0, 0.0)) / scale).x;\nfloat c1 = rand2((floor(smplpos) + vec2(1.0, 0.0)) / scale).x;\nfloat c2 = rand2((floor(smplpos) + vec2(0.0, 1.0)) / scale).x;\nfloat c3 = rand2((floor(smplpos) + vec2(1.0, 1.0)) / scale).x;\n\nvec2 a = fract(smplpos);\nreturn mix(mix(c0, c1, smoothstep(0.0, 1.0, a.x)),\nmix(c2, c3, smoothstep(0.0, 1.0, a.x)),\nsmoothstep(0.0, 1.0, a.x));\n}\n\nvoid main( void ) {\nvec2 pos = gl_FragCoord.xy / resolution.y - time * 0.4;\n\nfloat color = 0.0;\nfloat s = 1.0;\nfor (int i = 0; i < 6; ++i) {\ncolor += softnoise(pos + vec2(0.01 * float(i)), s * 4.0) / s / 2.0;\ns *= 2.0;\n}\ngl_FragColor = vec4(color,mix(color,cos(color),sin(color)),color,1);\n}\n"},368:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="#define GLSLIFY 1\nuniform float time;\nuniform vec2 resolution;\n\n// tie nd die by Snoep Games.\nvoid main( void ) {\nvec3 color = vec3(1.0, 0., 0.);\nvec2 pos = (( 1.4 * gl_FragCoord.xy - resolution.xy) / resolution.xx)*1.5;\nfloat r=sqrt(pos.x*pos.x+pos.y*pos.y)/15.0;\nfloat size1=2.0*cos(time/60.0);\nfloat size2=2.5*sin(time/12.1);\n\nfloat rot1=13.00; //82.0+16.0*sin(time/4.0);\nfloat rot2=-50.00; //82.0+16.0*sin(time/8.0);\nfloat t=sin(time);\nfloat a = (60.0)*sin(rot1*atan(pos.x-size1*pos.y/r,pos.y+size1*pos.x/r)+time);\na += 200.0*acos(pos.x*2.0+cos(time/2.0))+asin(pos.y*5.0+sin(time/2.0));\na=a*(r/50.0);\na=200.0*sin(a*5.0)*(r/30.0);\nif(a>5.0) a=a/200.0;\nif(a<0.5) a=a*22.5;\ngl_FragColor = vec4( cos(a/20.0),a*cos(a/200.0),sin(a/8.0), 1.0 );\n}\n"},369:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="#define GLSLIFY 1\nuniform float time;\nuniform vec2 resolution;\n\nvoid main( void )\n{\n\nvec2 uPos = ( gl_FragCoord.xy / resolution.xy );//normalize wrt y axis\n//suPos -= vec2((resolution.x/resolution.y)/2.0, 0.0);//shift origin to center\n\nuPos.x -= 1.0;\nuPos.y -= 0.5;\n\nvec3 color = vec3(0.0);\nfloat vertColor = 2.0;\nfor( float i = 0.0; i < 15.0; ++i )\n{\nfloat t = time * (0.9);\n\nuPos.y += sin( uPos.x*i + t+i/2.0 ) * 0.1;\nfloat fTemp = abs(1.0 / uPos.y / 100.0);\nvertColor += fTemp;\ncolor += vec3( fTemp*(10.0-i)/10.0, fTemp*i/10.0, pow(fTemp,1.5)*1.5 );\n}\n\nvec4 color_final = vec4(color, 1.0);\ngl_FragColor = color_final;\n}\n"},370:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="#define GLSLIFY 1\nuniform float time;\n\nvoid main()\n{\nvec3 posChanged = position;\nposChanged.x = posChanged.x*(abs(sin(time*1.0)));\nposChanged.y = posChanged.y*(abs(cos(time*1.0)));\nposChanged.z = posChanged.z*(abs(sin(time*1.0)));\n//gl_Position = projectionMatrix * modelViewMatrix * vec4(position*(abs(sin(time)/2.0)+0.5),1.0);\ngl_Position = projectionMatrix * modelViewMatrix * vec4(posChanged,1.0);\n}\n"},385:function(module,exports,__webpack_require__){var f;module.exports=((f=function(){function e(a){return c.appendChild(a.dom),a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?"block":"none";l=a}var l=0,c=document.createElement("div");c.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",c.addEventListener("click",function(a){a.preventDefault(),u(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel("FPS","#0ff","#002")),h=e(new f.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var t=e(new f.Panel("MB","#f08","#201"));return u(0),{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();if(h.update(c-k,200),c>g+1e3&&(r.update(1e3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}}).Panel=function(e,f,l){var c=1/0,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement("canvas");q.width=r,q.height=h,q.style.cssText="width:80px;height:48px";var b=q.getContext("2d");return b.font="bold "+9*a+"px Helvetica,Arial,sans-serif",b.textBaseline="top",b.fillStyle=l,b.fillRect(0,0,r,h),b.fillStyle=f,b.fillText(e,t,v),b.fillRect(d,m,n,p),b.fillStyle=l,b.globalAlpha=.9,b.fillRect(d,m,n,p),{dom:q,update:function(h,w){c=Math.min(c,h),k=Math.max(k,h),b.fillStyle=l,b.globalAlpha=1,b.fillRect(0,0,r,m),b.fillStyle=f,b.fillText(g(h)+" "+e+" ("+g(c)+"-"+g(k)+")",t,v),b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p),b.fillRect(d+n-a,m,a,p),b.fillStyle=l,b.globalAlpha=.9,b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}},f)}}]);
//# sourceMappingURL=4.3c5fc071e544c77027a1.bundle.js.map