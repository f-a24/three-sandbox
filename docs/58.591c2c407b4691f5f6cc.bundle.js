(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{711:function(module,exports,__webpack_require__){var f;module.exports=((f=function(){function e(a){return c.appendChild(a.dom),a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?"block":"none";l=a}var l=0,c=document.createElement("div");c.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",c.addEventListener("click",(function(a){a.preventDefault(),u(++l%c.children.length)}),!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel("FPS","#0ff","#002")),h=e(new f.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var t=e(new f.Panel("MB","#f08","#201"));return u(0),{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();if(h.update(c-k,200),c>g+1e3&&(r.update(1e3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}}).Panel=function(e,f,l){var c=1/0,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement("canvas");q.width=r,q.height=h,q.style.cssText="width:80px;height:48px";var b=q.getContext("2d");return b.font="bold "+9*a+"px Helvetica,Arial,sans-serif",b.textBaseline="top",b.fillStyle=l,b.fillRect(0,0,r,h),b.fillStyle=f,b.fillText(e,t,v),b.fillRect(d,m,n,p),b.fillStyle=l,b.globalAlpha=.9,b.fillRect(d,m,n,p),{dom:q,update:function(h,w){c=Math.min(c,h),k=Math.max(k,h),b.fillStyle=l,b.globalAlpha=1,b.fillRect(0,0,r,m),b.fillStyle=f,b.fillText(g(h)+" "+e+" ("+g(c)+"-"+g(k)+")",t,v),b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p),b.fillRect(d+n-a,m,a,p),b.fillStyle=l,b.globalAlpha=.9,b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}},f)},755:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return GLTFLoader}));var _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(710),GLTFLoader=function(){function GLTFLoader(manager){_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Loader.call(this,manager),this.dracoLoader=null,this.ddsLoader=null}function GLTFRegistry(){var objects={};return{get:function(key){return objects[key]},add:function(key,object){objects[key]=object},remove:function(key){delete objects[key]},removeAll:function(){objects={}}}}GLTFLoader.prototype=Object.assign(Object.create(_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Loader.prototype),{constructor:GLTFLoader,load:function(url,onLoad,onProgress,onError){var resourcePath,scope=this;resourcePath=""!==this.resourcePath?this.resourcePath:""!==this.path?this.path:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.LoaderUtils.extractUrlBase(url),scope.manager.itemStart(url);var _onError=function(e){onError?onError(e):console.error(e),scope.manager.itemError(url),scope.manager.itemEnd(url)},loader=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FileLoader(scope.manager);loader.setPath(this.path),loader.setResponseType("arraybuffer"),"use-credentials"===scope.crossOrigin&&loader.setWithCredentials(!0),loader.load(url,(function(data){try{scope.parse(data,resourcePath,(function(gltf){onLoad(gltf),scope.manager.itemEnd(url)}),_onError)}catch(e){_onError(e)}}),onProgress,_onError)},setDRACOLoader:function(dracoLoader){return this.dracoLoader=dracoLoader,this},setDDSLoader:function(ddsLoader){return this.ddsLoader=ddsLoader,this},parse:function(data,path,onLoad,onError){var content,extensions={};if("string"==typeof data)content=data;else if(_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.LoaderUtils.decodeText(new Uint8Array(data,0,4))===BINARY_EXTENSION_HEADER_MAGIC){try{extensions[EXTENSIONS.KHR_BINARY_GLTF]=new GLTFBinaryExtension(data)}catch(error){return void(onError&&onError(error))}content=extensions[EXTENSIONS.KHR_BINARY_GLTF].content}else content=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.LoaderUtils.decodeText(new Uint8Array(data));var json=JSON.parse(content);if(void 0===json.asset||json.asset.version[0]<2)onError&&onError(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead."));else{if(json.extensionsUsed)for(var i=0;i<json.extensionsUsed.length;++i){var extensionName=json.extensionsUsed[i],extensionsRequired=json.extensionsRequired||[];switch(extensionName){case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:extensions[extensionName]=new GLTFLightsExtension(json);break;case EXTENSIONS.KHR_MATERIALS_UNLIT:extensions[extensionName]=new GLTFMaterialsUnlitExtension;break;case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:extensions[extensionName]=new GLTFMaterialsPbrSpecularGlossinessExtension;break;case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:extensions[extensionName]=new GLTFDracoMeshCompressionExtension(json,this.dracoLoader);break;case EXTENSIONS.MSFT_TEXTURE_DDS:extensions[EXTENSIONS.MSFT_TEXTURE_DDS]=new GLTFTextureDDSExtension(this.ddsLoader);break;case EXTENSIONS.KHR_TEXTURE_TRANSFORM:extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]=new GLTFTextureTransformExtension;break;default:extensionsRequired.indexOf(extensionName)>=0&&console.warn('THREE.GLTFLoader: Unknown extension "'+extensionName+'".')}}new GLTFParser(json,extensions,{path:path||this.resourcePath||"",crossOrigin:this.crossOrigin,manager:this.manager}).parse(onLoad,onError)}}});var EXTENSIONS={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:"KHR_materials_pbrSpecularGlossiness",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",MSFT_TEXTURE_DDS:"MSFT_texture_dds"};function GLTFTextureDDSExtension(ddsLoader){if(!ddsLoader)throw new Error("THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader");this.name=EXTENSIONS.MSFT_TEXTURE_DDS,this.ddsLoader=ddsLoader}function GLTFLightsExtension(json){this.name=EXTENSIONS.KHR_LIGHTS_PUNCTUAL;var extension=json.extensions&&json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL]||{};this.lightDefs=extension.lights||[]}function GLTFMaterialsUnlitExtension(){this.name=EXTENSIONS.KHR_MATERIALS_UNLIT}GLTFLightsExtension.prototype.loadLight=function(lightIndex){var lightNode,lightDef=this.lightDefs[lightIndex],color=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(16777215);void 0!==lightDef.color&&color.fromArray(lightDef.color);var range=void 0!==lightDef.range?lightDef.range:0;switch(lightDef.type){case"directional":(lightNode=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.DirectionalLight(color)).target.position.set(0,0,-1),lightNode.add(lightNode.target);break;case"point":(lightNode=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.PointLight(color)).distance=range;break;case"spot":(lightNode=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.SpotLight(color)).distance=range,lightDef.spot=lightDef.spot||{},lightDef.spot.innerConeAngle=void 0!==lightDef.spot.innerConeAngle?lightDef.spot.innerConeAngle:0,lightDef.spot.outerConeAngle=void 0!==lightDef.spot.outerConeAngle?lightDef.spot.outerConeAngle:Math.PI/4,lightNode.angle=lightDef.spot.outerConeAngle,lightNode.penumbra=1-lightDef.spot.innerConeAngle/lightDef.spot.outerConeAngle,lightNode.target.position.set(0,0,-1),lightNode.add(lightNode.target);break;default:throw new Error('THREE.GLTFLoader: Unexpected light type, "'+lightDef.type+'".')}return lightNode.position.set(0,0,0),lightNode.decay=2,void 0!==lightDef.intensity&&(lightNode.intensity=lightDef.intensity),lightNode.name=lightDef.name||"light_"+lightIndex,Promise.resolve(lightNode)},GLTFMaterialsUnlitExtension.prototype.getMaterialType=function(){return _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial},GLTFMaterialsUnlitExtension.prototype.extendParams=function(materialParams,materialDef,parser){var pending=[];materialParams.color=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(1,1,1),materialParams.opacity=1;var metallicRoughness=materialDef.pbrMetallicRoughness;if(metallicRoughness){if(Array.isArray(metallicRoughness.baseColorFactor)){var array=metallicRoughness.baseColorFactor;materialParams.color.fromArray(array),materialParams.opacity=array[3]}void 0!==metallicRoughness.baseColorTexture&&pending.push(parser.assignTexture(materialParams,"map",metallicRoughness.baseColorTexture))}return Promise.all(pending)};var BINARY_EXTENSION_HEADER_MAGIC="glTF",BINARY_EXTENSION_HEADER_LENGTH=12,BINARY_EXTENSION_CHUNK_TYPES={JSON:1313821514,BIN:5130562};function GLTFBinaryExtension(data){this.name=EXTENSIONS.KHR_BINARY_GLTF,this.content=null,this.body=null;var headerView=new DataView(data,0,BINARY_EXTENSION_HEADER_LENGTH);if(this.header={magic:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.LoaderUtils.decodeText(new Uint8Array(data.slice(0,4))),version:headerView.getUint32(4,!0),length:headerView.getUint32(8,!0)},this.header.magic!==BINARY_EXTENSION_HEADER_MAGIC)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.");for(var chunkView=new DataView(data,BINARY_EXTENSION_HEADER_LENGTH),chunkIndex=0;chunkIndex<chunkView.byteLength;){var chunkLength=chunkView.getUint32(chunkIndex,!0);chunkIndex+=4;var chunkType=chunkView.getUint32(chunkIndex,!0);if(chunkIndex+=4,chunkType===BINARY_EXTENSION_CHUNK_TYPES.JSON){var contentArray=new Uint8Array(data,BINARY_EXTENSION_HEADER_LENGTH+chunkIndex,chunkLength);this.content=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.LoaderUtils.decodeText(contentArray)}else if(chunkType===BINARY_EXTENSION_CHUNK_TYPES.BIN){var byteOffset=BINARY_EXTENSION_HEADER_LENGTH+chunkIndex;this.body=data.slice(byteOffset,byteOffset+chunkLength)}chunkIndex+=chunkLength}if(null===this.content)throw new Error("THREE.GLTFLoader: JSON content not found.")}function GLTFDracoMeshCompressionExtension(json,dracoLoader){if(!dracoLoader)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=EXTENSIONS.KHR_DRACO_MESH_COMPRESSION,this.json=json,this.dracoLoader=dracoLoader}function GLTFTextureTransformExtension(){this.name=EXTENSIONS.KHR_TEXTURE_TRANSFORM}function GLTFMaterialsPbrSpecularGlossinessExtension(){return{name:EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,specularGlossinessParams:["color","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissive","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","displacementMap","displacementScale","displacementBias","specularMap","specular","glossinessMap","glossiness","alphaMap","envMap","envMapIntensity","refractionRatio"],getMaterialType:function(){return _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial},extendParams:function(materialParams,materialDef,parser){var pbrSpecularGlossiness=materialDef.extensions[this.name],shader=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.ShaderLib.standard,uniforms=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.UniformsUtils.clone(shader.uniforms),specularMapParsFragmentChunk=["#ifdef USE_SPECULARMAP","\tuniform sampler2D specularMap;","#endif"].join("\n"),glossinessMapParsFragmentChunk=["#ifdef USE_GLOSSINESSMAP","\tuniform sampler2D glossinessMap;","#endif"].join("\n"),specularMapFragmentChunk=["vec3 specularFactor = specular;","#ifdef USE_SPECULARMAP","\tvec4 texelSpecular = texture2D( specularMap, vUv );","\ttexelSpecular = sRGBToLinear( texelSpecular );","\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture","\tspecularFactor *= texelSpecular.rgb;","#endif"].join("\n"),glossinessMapFragmentChunk=["float glossinessFactor = glossiness;","#ifdef USE_GLOSSINESSMAP","\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );","\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture","\tglossinessFactor *= texelGlossiness.a;","#endif"].join("\n"),lightPhysicalFragmentChunk=["PhysicalMaterial material;","material.diffuseColor = diffuseColor.rgb;","material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );","material.specularColor = specularFactor.rgb;"].join("\n"),fragmentShader=shader.fragmentShader.replace("uniform float roughness;","uniform vec3 specular;").replace("uniform float metalness;","uniform float glossiness;").replace("#include <roughnessmap_pars_fragment>",specularMapParsFragmentChunk).replace("#include <metalnessmap_pars_fragment>",glossinessMapParsFragmentChunk).replace("#include <roughnessmap_fragment>",specularMapFragmentChunk).replace("#include <metalnessmap_fragment>",glossinessMapFragmentChunk).replace("#include <lights_physical_fragment>",lightPhysicalFragmentChunk);delete uniforms.roughness,delete uniforms.metalness,delete uniforms.roughnessMap,delete uniforms.metalnessMap,uniforms.specular={value:(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color).setHex(1118481)},uniforms.glossiness={value:.5},uniforms.specularMap={value:null},uniforms.glossinessMap={value:null},materialParams.vertexShader=shader.vertexShader,materialParams.fragmentShader=fragmentShader,materialParams.uniforms=uniforms,materialParams.defines={STANDARD:""},materialParams.color=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(1,1,1),materialParams.opacity=1;var pending=[];if(Array.isArray(pbrSpecularGlossiness.diffuseFactor)){var array=pbrSpecularGlossiness.diffuseFactor;materialParams.color.fromArray(array),materialParams.opacity=array[3]}if(void 0!==pbrSpecularGlossiness.diffuseTexture&&pending.push(parser.assignTexture(materialParams,"map",pbrSpecularGlossiness.diffuseTexture)),materialParams.emissive=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(0,0,0),materialParams.glossiness=void 0!==pbrSpecularGlossiness.glossinessFactor?pbrSpecularGlossiness.glossinessFactor:1,materialParams.specular=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(1,1,1),Array.isArray(pbrSpecularGlossiness.specularFactor)&&materialParams.specular.fromArray(pbrSpecularGlossiness.specularFactor),void 0!==pbrSpecularGlossiness.specularGlossinessTexture){var specGlossMapDef=pbrSpecularGlossiness.specularGlossinessTexture;pending.push(parser.assignTexture(materialParams,"glossinessMap",specGlossMapDef)),pending.push(parser.assignTexture(materialParams,"specularMap",specGlossMapDef))}return Promise.all(pending)},createMaterial:function(params){var material=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial({defines:params.defines,vertexShader:params.vertexShader,fragmentShader:params.fragmentShader,uniforms:params.uniforms,fog:!0,lights:!0,opacity:params.opacity,transparent:params.transparent});return material.isGLTFSpecularGlossinessMaterial=!0,material.color=params.color,material.map=void 0===params.map?null:params.map,material.lightMap=null,material.lightMapIntensity=1,material.aoMap=void 0===params.aoMap?null:params.aoMap,material.aoMapIntensity=1,material.emissive=params.emissive,material.emissiveIntensity=1,material.emissiveMap=void 0===params.emissiveMap?null:params.emissiveMap,material.bumpMap=void 0===params.bumpMap?null:params.bumpMap,material.bumpScale=1,material.normalMap=void 0===params.normalMap?null:params.normalMap,params.normalScale&&(material.normalScale=params.normalScale),material.displacementMap=null,material.displacementScale=1,material.displacementBias=0,material.specularMap=void 0===params.specularMap?null:params.specularMap,material.specular=params.specular,material.glossinessMap=void 0===params.glossinessMap?null:params.glossinessMap,material.glossiness=params.glossiness,material.alphaMap=null,material.envMap=void 0===params.envMap?null:params.envMap,material.envMapIntensity=1,material.refractionRatio=.98,material.extensions.derivatives=!0,material},cloneMaterial:function(source){var target=source.clone();target.isGLTFSpecularGlossinessMaterial=!0;for(var params=this.specularGlossinessParams,i=0,il=params.length;i<il;i++){var value=source[params[i]];target[params[i]]=value&&value.isColor?value.clone():value}return target},refreshUniforms:function(renderer,scene,camera,geometry,material){if(!0===material.isGLTFSpecularGlossinessMaterial){var uvScaleMap,uniforms=material.uniforms,defines=material.defines;uniforms.opacity.value=material.opacity,uniforms.diffuse.value.copy(material.color),uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity),uniforms.map.value=material.map,uniforms.specularMap.value=material.specularMap,uniforms.alphaMap.value=material.alphaMap,uniforms.lightMap.value=material.lightMap,uniforms.lightMapIntensity.value=material.lightMapIntensity,uniforms.aoMap.value=material.aoMap,uniforms.aoMapIntensity.value=material.aoMapIntensity,material.map?uvScaleMap=material.map:material.specularMap?uvScaleMap=material.specularMap:material.displacementMap?uvScaleMap=material.displacementMap:material.normalMap?uvScaleMap=material.normalMap:material.bumpMap?uvScaleMap=material.bumpMap:material.glossinessMap?uvScaleMap=material.glossinessMap:material.alphaMap?uvScaleMap=material.alphaMap:material.emissiveMap&&(uvScaleMap=material.emissiveMap),void 0!==uvScaleMap&&(uvScaleMap.isWebGLRenderTarget&&(uvScaleMap=uvScaleMap.texture),!0===uvScaleMap.matrixAutoUpdate&&uvScaleMap.updateMatrix(),uniforms.uvTransform.value.copy(uvScaleMap.matrix)),material.envMap&&(uniforms.envMap.value=material.envMap,uniforms.envMapIntensity.value=material.envMapIntensity,uniforms.flipEnvMap.value=material.envMap.isCubeTexture?-1:1,uniforms.reflectivity.value=material.reflectivity,uniforms.refractionRatio.value=material.refractionRatio,uniforms.maxMipLevel.value=renderer.properties.get(material.envMap).__maxMipLevel),uniforms.specular.value.copy(material.specular),uniforms.glossiness.value=material.glossiness,uniforms.glossinessMap.value=material.glossinessMap,uniforms.emissiveMap.value=material.emissiveMap,uniforms.bumpMap.value=material.bumpMap,uniforms.normalMap.value=material.normalMap,uniforms.displacementMap.value=material.displacementMap,uniforms.displacementScale.value=material.displacementScale,uniforms.displacementBias.value=material.displacementBias,null!==uniforms.glossinessMap.value&&void 0===defines.USE_GLOSSINESSMAP&&(defines.USE_GLOSSINESSMAP="",defines.USE_ROUGHNESSMAP=""),null===uniforms.glossinessMap.value&&void 0!==defines.USE_GLOSSINESSMAP&&(delete defines.USE_GLOSSINESSMAP,delete defines.USE_ROUGHNESSMAP)}}}}function GLTFCubicSplineInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer)}GLTFDracoMeshCompressionExtension.prototype.decodePrimitive=function(primitive,parser){var json=this.json,dracoLoader=this.dracoLoader,bufferViewIndex=primitive.extensions[this.name].bufferView,gltfAttributeMap=primitive.extensions[this.name].attributes,threeAttributeMap={},attributeNormalizedMap={},attributeTypeMap={};for(var attributeName in gltfAttributeMap){var threeAttributeName=ATTRIBUTES[attributeName]||attributeName.toLowerCase();threeAttributeMap[threeAttributeName]=gltfAttributeMap[attributeName]}for(attributeName in primitive.attributes){threeAttributeName=ATTRIBUTES[attributeName]||attributeName.toLowerCase();if(void 0!==gltfAttributeMap[attributeName]){var accessorDef=json.accessors[primitive.attributes[attributeName]],componentType=WEBGL_COMPONENT_TYPES[accessorDef.componentType];attributeTypeMap[threeAttributeName]=componentType,attributeNormalizedMap[threeAttributeName]=!0===accessorDef.normalized}}return parser.getDependency("bufferView",bufferViewIndex).then((function(bufferView){return new Promise((function(resolve){dracoLoader.decodeDracoFile(bufferView,(function(geometry){for(var attributeName in geometry.attributes){var attribute=geometry.attributes[attributeName],normalized=attributeNormalizedMap[attributeName];void 0!==normalized&&(attribute.normalized=normalized)}resolve(geometry)}),threeAttributeMap,attributeTypeMap)}))}))},GLTFTextureTransformExtension.prototype.extendTexture=function(texture,transform){return texture=texture.clone(),void 0!==transform.offset&&texture.offset.fromArray(transform.offset),void 0!==transform.rotation&&(texture.rotation=transform.rotation),void 0!==transform.scale&&texture.repeat.fromArray(transform.scale),void 0!==transform.texCoord&&console.warn('THREE.GLTFLoader: Custom UV sets in "'+this.name+'" extension not yet supported.'),texture.needsUpdate=!0,texture},GLTFCubicSplineInterpolant.prototype=Object.create(_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Interpolant.prototype),GLTFCubicSplineInterpolant.prototype.constructor=GLTFCubicSplineInterpolant,GLTFCubicSplineInterpolant.prototype.copySampleValue_=function(index){for(var result=this.resultBuffer,values=this.sampleValues,valueSize=this.valueSize,offset=index*valueSize*3+valueSize,i=0;i!==valueSize;i++)result[i]=values[offset+i];return result},GLTFCubicSplineInterpolant.prototype.beforeStart_=GLTFCubicSplineInterpolant.prototype.copySampleValue_,GLTFCubicSplineInterpolant.prototype.afterEnd_=GLTFCubicSplineInterpolant.prototype.copySampleValue_,GLTFCubicSplineInterpolant.prototype.interpolate_=function(i1,t0,t,t1){for(var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,stride2=2*stride,stride3=3*stride,td=t1-t0,p=(t-t0)/td,pp=p*p,ppp=pp*p,offset1=i1*stride3,offset0=offset1-stride3,s2=-2*ppp+3*pp,s3=ppp-pp,s0=1-s2,s1=s3-pp+p,i=0;i!==stride;i++){var p0=values[offset0+i+stride],m0=values[offset0+i+stride2]*td,p1=values[offset1+i+stride],m1=values[offset1+i]*td;result[i]=s0*p0+s1*m0+s2*p1+s3*m1}return result};var defaultMaterial,WEBGL_CONSTANTS_POINTS=0,WEBGL_CONSTANTS_LINES=1,WEBGL_CONSTANTS_LINE_LOOP=2,WEBGL_CONSTANTS_LINE_STRIP=3,WEBGL_CONSTANTS_TRIANGLES=4,WEBGL_CONSTANTS_TRIANGLE_STRIP=5,WEBGL_CONSTANTS_TRIANGLE_FAN=6,WEBGL_COMPONENT_TYPES={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},WEBGL_FILTERS={9728:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NearestFilter,9729:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.LinearFilter,9984:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NearestMipmapNearestFilter,9985:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.LinearMipmapNearestFilter,9986:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NearestMipmapLinearFilter,9987:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.LinearMipmapLinearFilter},WEBGL_WRAPPINGS={33071:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.ClampToEdgeWrapping,33648:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MirroredRepeatWrapping,10497:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.RepeatWrapping},WEBGL_TYPE_SIZES={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},ATTRIBUTES={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv2",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},PATH_PROPERTIES={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},INTERPOLATION={CUBICSPLINE:void 0,LINEAR:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.InterpolateLinear,STEP:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.InterpolateDiscrete},ALPHA_MODES_OPAQUE="OPAQUE",ALPHA_MODES_MASK="MASK",ALPHA_MODES_BLEND="BLEND",MIME_TYPE_FORMATS={"image/png":_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.RGBAFormat,"image/jpeg":_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.RGBFormat};function resolveURL(url,path){return"string"!=typeof url||""===url?"":(/^https?:\/\//i.test(path)&&/^\//.test(url)&&(path=path.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(url)?url:/^data:.*,.*$/i.test(url)?url:/^blob:.*$/i.test(url)?url:path+url)}function addUnknownExtensionsToUserData(knownExtensions,object,objectDef){for(var name in objectDef.extensions)void 0===knownExtensions[name]&&(object.userData.gltfExtensions=object.userData.gltfExtensions||{},object.userData.gltfExtensions[name]=objectDef.extensions[name])}function assignExtrasToUserData(object,gltfDef){void 0!==gltfDef.extras&&("object"==typeof gltfDef.extras?Object.assign(object.userData,gltfDef.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+gltfDef.extras))}function updateMorphTargets(mesh,meshDef){if(mesh.updateMorphTargets(),void 0!==meshDef.weights)for(var i=0,il=meshDef.weights.length;i<il;i++)mesh.morphTargetInfluences[i]=meshDef.weights[i];if(meshDef.extras&&Array.isArray(meshDef.extras.targetNames)){var targetNames=meshDef.extras.targetNames;if(mesh.morphTargetInfluences.length===targetNames.length){mesh.morphTargetDictionary={};for(i=0,il=targetNames.length;i<il;i++)mesh.morphTargetDictionary[targetNames[i]]=i}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function createAttributesKey(attributes){for(var attributesKey="",keys=Object.keys(attributes).sort(),i=0,il=keys.length;i<il;i++)attributesKey+=keys[i]+":"+attributes[keys[i]]+";";return attributesKey}function cloneBufferAttribute(attribute){if(attribute.isInterleavedBufferAttribute){for(var count=attribute.count,itemSize=attribute.itemSize,array=attribute.array.slice(0,count*itemSize),i=0,j=0;i<count;++i)array[j++]=attribute.getX(i),itemSize>=2&&(array[j++]=attribute.getY(i)),itemSize>=3&&(array[j++]=attribute.getZ(i)),itemSize>=4&&(array[j++]=attribute.getW(i));return new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(array,itemSize,attribute.normalized)}return attribute.clone()}function GLTFParser(json,extensions,options){this.json=json||{},this.extensions=extensions||{},this.options=options||{},this.cache=new GLTFRegistry,this.primitiveCache={},this.textureLoader=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.TextureLoader(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.fileLoader=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FileLoader(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),"use-credentials"===this.options.crossOrigin&&this.fileLoader.setWithCredentials(!0)}function addPrimitiveAttributes(geometry,primitiveDef,parser){var attributes=primitiveDef.attributes,pending=[];function assignAttributeAccessor(accessorIndex,attributeName){return parser.getDependency("accessor",accessorIndex).then((function(accessor){geometry.addAttribute(attributeName,accessor)}))}for(var gltfAttributeName in attributes){var threeAttributeName=ATTRIBUTES[gltfAttributeName]||gltfAttributeName.toLowerCase();threeAttributeName in geometry.attributes||pending.push(assignAttributeAccessor(attributes[gltfAttributeName],threeAttributeName))}if(void 0!==primitiveDef.indices&&!geometry.index){var accessor=parser.getDependency("accessor",primitiveDef.indices).then((function(accessor){geometry.setIndex(accessor)}));pending.push(accessor)}return assignExtrasToUserData(geometry,primitiveDef),Promise.all(pending).then((function(){return void 0!==primitiveDef.targets?function addMorphTargets(geometry,targets,parser){for(var hasMorphPosition=!1,hasMorphNormal=!1,i=0,il=targets.length;i<il;i++){if(void 0!==(target=targets[i]).POSITION&&(hasMorphPosition=!0),void 0!==target.NORMAL&&(hasMorphNormal=!0),hasMorphPosition&&hasMorphNormal)break}if(!hasMorphPosition&&!hasMorphNormal)return Promise.resolve(geometry);var pendingPositionAccessors=[],pendingNormalAccessors=[];for(i=0,il=targets.length;i<il;i++){var target=targets[i];if(hasMorphPosition){var pendingAccessor=void 0!==target.POSITION?parser.getDependency("accessor",target.POSITION):geometry.attributes.position;pendingPositionAccessors.push(pendingAccessor)}if(hasMorphNormal){pendingAccessor=void 0!==target.NORMAL?parser.getDependency("accessor",target.NORMAL):geometry.attributes.normal;pendingNormalAccessors.push(pendingAccessor)}}return Promise.all([Promise.all(pendingPositionAccessors),Promise.all(pendingNormalAccessors)]).then((function(accessors){for(var morphPositions=accessors[0],morphNormals=accessors[1],i=0,il=morphPositions.length;i<il;i++)geometry.attributes.position!==morphPositions[i]&&(morphPositions[i]=cloneBufferAttribute(morphPositions[i]));for(i=0,il=morphNormals.length;i<il;i++)geometry.attributes.normal!==morphNormals[i]&&(morphNormals[i]=cloneBufferAttribute(morphNormals[i]));for(i=0,il=targets.length;i<il;i++){var target=targets[i],attributeName="morphTarget"+i;if(hasMorphPosition&&void 0!==target.POSITION){var positionAttribute=morphPositions[i];positionAttribute.name=attributeName;for(var position=geometry.attributes.position,j=0,jl=positionAttribute.count;j<jl;j++)positionAttribute.setXYZ(j,positionAttribute.getX(j)+position.getX(j),positionAttribute.getY(j)+position.getY(j),positionAttribute.getZ(j)+position.getZ(j))}if(hasMorphNormal&&void 0!==target.NORMAL){var normalAttribute=morphNormals[i];normalAttribute.name=attributeName;var normal=geometry.attributes.normal;for(j=0,jl=normalAttribute.count;j<jl;j++)normalAttribute.setXYZ(j,normalAttribute.getX(j)+normal.getX(j),normalAttribute.getY(j)+normal.getY(j),normalAttribute.getZ(j)+normal.getZ(j))}}return hasMorphPosition&&(geometry.morphAttributes.position=morphPositions),hasMorphNormal&&(geometry.morphAttributes.normal=morphNormals),geometry}))}(geometry,primitiveDef.targets,parser):geometry}))}return GLTFParser.prototype.parse=function(onLoad,onError){var parser=this,json=this.json,extensions=this.extensions;this.cache.removeAll(),this.markDefs(),Promise.all([this.getDependencies("scene"),this.getDependencies("animation"),this.getDependencies("camera")]).then((function(dependencies){var result={scene:dependencies[0][json.scene||0],scenes:dependencies[0],animations:dependencies[1],cameras:dependencies[2],asset:json.asset,parser:parser,userData:{}};addUnknownExtensionsToUserData(extensions,result,json),assignExtrasToUserData(result,json),onLoad(result)})).catch(onError)},GLTFParser.prototype.markDefs=function(){for(var nodeDefs=this.json.nodes||[],skinDefs=this.json.skins||[],meshDefs=this.json.meshes||[],meshReferences={},meshUses={},skinIndex=0,skinLength=skinDefs.length;skinIndex<skinLength;skinIndex++)for(var joints=skinDefs[skinIndex].joints,i=0,il=joints.length;i<il;i++)nodeDefs[joints[i]].isBone=!0;for(var nodeIndex=0,nodeLength=nodeDefs.length;nodeIndex<nodeLength;nodeIndex++){var nodeDef=nodeDefs[nodeIndex];void 0!==nodeDef.mesh&&(void 0===meshReferences[nodeDef.mesh]&&(meshReferences[nodeDef.mesh]=meshUses[nodeDef.mesh]=0),meshReferences[nodeDef.mesh]++,void 0!==nodeDef.skin&&(meshDefs[nodeDef.mesh].isSkinnedMesh=!0))}this.json.meshReferences=meshReferences,this.json.meshUses=meshUses},GLTFParser.prototype.getDependency=function(type,index){var cacheKey=type+":"+index,dependency=this.cache.get(cacheKey);if(!dependency){switch(type){case"scene":dependency=this.loadScene(index);break;case"node":dependency=this.loadNode(index);break;case"mesh":dependency=this.loadMesh(index);break;case"accessor":dependency=this.loadAccessor(index);break;case"bufferView":dependency=this.loadBufferView(index);break;case"buffer":dependency=this.loadBuffer(index);break;case"material":dependency=this.loadMaterial(index);break;case"texture":dependency=this.loadTexture(index);break;case"skin":dependency=this.loadSkin(index);break;case"animation":dependency=this.loadAnimation(index);break;case"camera":dependency=this.loadCamera(index);break;case"light":dependency=this.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].loadLight(index);break;default:throw new Error("Unknown type: "+type)}this.cache.add(cacheKey,dependency)}return dependency},GLTFParser.prototype.getDependencies=function(type){var dependencies=this.cache.get(type);if(!dependencies){var parser=this,defs=this.json[type+("mesh"===type?"es":"s")]||[];dependencies=Promise.all(defs.map((function(def,index){return parser.getDependency(type,index)}))),this.cache.add(type,dependencies)}return dependencies},GLTFParser.prototype.loadBuffer=function(bufferIndex){var bufferDef=this.json.buffers[bufferIndex],loader=this.fileLoader;if(bufferDef.type&&"arraybuffer"!==bufferDef.type)throw new Error("THREE.GLTFLoader: "+bufferDef.type+" buffer type is not supported.");if(void 0===bufferDef.uri&&0===bufferIndex)return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);var options=this.options;return new Promise((function(resolve,reject){loader.load(resolveURL(bufferDef.uri,options.path),resolve,void 0,(function(){reject(new Error('THREE.GLTFLoader: Failed to load buffer "'+bufferDef.uri+'".'))}))}))},GLTFParser.prototype.loadBufferView=function(bufferViewIndex){var bufferViewDef=this.json.bufferViews[bufferViewIndex];return this.getDependency("buffer",bufferViewDef.buffer).then((function(buffer){var byteLength=bufferViewDef.byteLength||0,byteOffset=bufferViewDef.byteOffset||0;return buffer.slice(byteOffset,byteOffset+byteLength)}))},GLTFParser.prototype.loadAccessor=function(accessorIndex){var parser=this,json=this.json,accessorDef=this.json.accessors[accessorIndex];if(void 0===accessorDef.bufferView&&void 0===accessorDef.sparse)return Promise.resolve(null);var pendingBufferViews=[];return void 0!==accessorDef.bufferView?pendingBufferViews.push(this.getDependency("bufferView",accessorDef.bufferView)):pendingBufferViews.push(null),void 0!==accessorDef.sparse&&(pendingBufferViews.push(this.getDependency("bufferView",accessorDef.sparse.indices.bufferView)),pendingBufferViews.push(this.getDependency("bufferView",accessorDef.sparse.values.bufferView))),Promise.all(pendingBufferViews).then((function(bufferViews){var array,bufferAttribute,bufferView=bufferViews[0],itemSize=WEBGL_TYPE_SIZES[accessorDef.type],TypedArray=WEBGL_COMPONENT_TYPES[accessorDef.componentType],elementBytes=TypedArray.BYTES_PER_ELEMENT,itemBytes=elementBytes*itemSize,byteOffset=accessorDef.byteOffset||0,byteStride=void 0!==accessorDef.bufferView?json.bufferViews[accessorDef.bufferView].byteStride:void 0,normalized=!0===accessorDef.normalized;if(byteStride&&byteStride!==itemBytes){var ibSlice=Math.floor(byteOffset/byteStride),ibCacheKey="InterleavedBuffer:"+accessorDef.bufferView+":"+accessorDef.componentType+":"+ibSlice+":"+accessorDef.count,ib=parser.cache.get(ibCacheKey);ib||(array=new TypedArray(bufferView,ibSlice*byteStride,accessorDef.count*byteStride/elementBytes),ib=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.InterleavedBuffer(array,byteStride/elementBytes),parser.cache.add(ibCacheKey,ib)),bufferAttribute=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.InterleavedBufferAttribute(ib,itemSize,byteOffset%byteStride/elementBytes,normalized)}else array=null===bufferView?new TypedArray(accessorDef.count*itemSize):new TypedArray(bufferView,byteOffset,accessorDef.count*itemSize),bufferAttribute=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(array,itemSize,normalized);if(void 0!==accessorDef.sparse){var itemSizeIndices=WEBGL_TYPE_SIZES.SCALAR,TypedArrayIndices=WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType],byteOffsetIndices=accessorDef.sparse.indices.byteOffset||0,byteOffsetValues=accessorDef.sparse.values.byteOffset||0,sparseIndices=new TypedArrayIndices(bufferViews[1],byteOffsetIndices,accessorDef.sparse.count*itemSizeIndices),sparseValues=new TypedArray(bufferViews[2],byteOffsetValues,accessorDef.sparse.count*itemSize);null!==bufferView&&(bufferAttribute=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(bufferAttribute.array.slice(),bufferAttribute.itemSize,bufferAttribute.normalized));for(var i=0,il=sparseIndices.length;i<il;i++){var index=sparseIndices[i];if(bufferAttribute.setX(index,sparseValues[i*itemSize]),itemSize>=2&&bufferAttribute.setY(index,sparseValues[i*itemSize+1]),itemSize>=3&&bufferAttribute.setZ(index,sparseValues[i*itemSize+2]),itemSize>=4&&bufferAttribute.setW(index,sparseValues[i*itemSize+3]),itemSize>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}}return bufferAttribute}))},GLTFParser.prototype.loadTexture=function(textureIndex){var source,parser=this,json=this.json,options=this.options,textureLoader=this.textureLoader,URL=window.URL||window.webkitURL,textureDef=json.textures[textureIndex],textureExtensions=textureDef.extensions||{},sourceURI=(source=textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]?json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source]:json.images[textureDef.source]).uri,isObjectURL=!1;return void 0!==source.bufferView&&(sourceURI=parser.getDependency("bufferView",source.bufferView).then((function(bufferView){isObjectURL=!0;var blob=new Blob([bufferView],{type:source.mimeType});return sourceURI=URL.createObjectURL(blob)}))),Promise.resolve(sourceURI).then((function(sourceURI){var loader=options.manager.getHandler(sourceURI);return loader||(loader=textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]?parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader:textureLoader),new Promise((function(resolve,reject){loader.load(resolveURL(sourceURI,options.path),resolve,void 0,reject)}))})).then((function(texture){!0===isObjectURL&&URL.revokeObjectURL(sourceURI),texture.flipY=!1,void 0!==textureDef.name&&(texture.name=textureDef.name),source.mimeType in MIME_TYPE_FORMATS&&(texture.format=MIME_TYPE_FORMATS[source.mimeType]);var sampler=(json.samplers||{})[textureDef.sampler]||{};return texture.magFilter=WEBGL_FILTERS[sampler.magFilter]||_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.LinearFilter,texture.minFilter=WEBGL_FILTERS[sampler.minFilter]||_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.LinearMipmapLinearFilter,texture.wrapS=WEBGL_WRAPPINGS[sampler.wrapS]||_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.RepeatWrapping,texture.wrapT=WEBGL_WRAPPINGS[sampler.wrapT]||_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.RepeatWrapping,texture}))},GLTFParser.prototype.assignTexture=function(materialParams,mapName,mapDef){var parser=this;return this.getDependency("texture",mapDef.index).then((function(texture){if(!texture.isCompressedTexture)switch(mapName){case"aoMap":case"emissiveMap":case"metalnessMap":case"normalMap":case"roughnessMap":texture.format=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.RGBFormat}if(parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]){var transform=void 0!==mapDef.extensions?mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]:void 0;transform&&(texture=parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(texture,transform))}materialParams[mapName]=texture}))},GLTFParser.prototype.assignFinalMaterial=function(mesh){var geometry=mesh.geometry,material=mesh.material,extensions=this.extensions,useVertexTangents=void 0!==geometry.attributes.tangent,useVertexColors=void 0!==geometry.attributes.color,useFlatShading=void 0===geometry.attributes.normal,useSkinning=!0===mesh.isSkinnedMesh,useMorphTargets=Object.keys(geometry.morphAttributes).length>0,useMorphNormals=useMorphTargets&&void 0!==geometry.morphAttributes.normal;if(mesh.isPoints){var cacheKey="PointsMaterial:"+material.uuid,pointsMaterial=this.cache.get(cacheKey);pointsMaterial||(pointsMaterial=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.PointsMaterial,_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Material.prototype.copy.call(pointsMaterial,material),pointsMaterial.color.copy(material.color),pointsMaterial.map=material.map,pointsMaterial.sizeAttenuation=!1,this.cache.add(cacheKey,pointsMaterial)),material=pointsMaterial}else if(mesh.isLine){cacheKey="LineBasicMaterial:"+material.uuid;var lineMaterial=this.cache.get(cacheKey);lineMaterial||(lineMaterial=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.LineBasicMaterial,_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Material.prototype.copy.call(lineMaterial,material),lineMaterial.color.copy(material.color),this.cache.add(cacheKey,lineMaterial)),material=lineMaterial}if(useVertexTangents||useVertexColors||useFlatShading||useSkinning||useMorphTargets){cacheKey="ClonedMaterial:"+material.uuid+":";material.isGLTFSpecularGlossinessMaterial&&(cacheKey+="specular-glossiness:"),useSkinning&&(cacheKey+="skinning:"),useVertexTangents&&(cacheKey+="vertex-tangents:"),useVertexColors&&(cacheKey+="vertex-colors:"),useFlatShading&&(cacheKey+="flat-shading:"),useMorphTargets&&(cacheKey+="morph-targets:"),useMorphNormals&&(cacheKey+="morph-normals:");var cachedMaterial=this.cache.get(cacheKey);cachedMaterial||(cachedMaterial=material.isGLTFSpecularGlossinessMaterial?extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].cloneMaterial(material):material.clone(),useSkinning&&(cachedMaterial.skinning=!0),useVertexTangents&&(cachedMaterial.vertexTangents=!0),useVertexColors&&(cachedMaterial.vertexColors=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.VertexColors),useFlatShading&&(cachedMaterial.flatShading=!0),useMorphTargets&&(cachedMaterial.morphTargets=!0),useMorphNormals&&(cachedMaterial.morphNormals=!0),this.cache.add(cacheKey,cachedMaterial)),material=cachedMaterial}material.aoMap&&void 0===geometry.attributes.uv2&&void 0!==geometry.attributes.uv&&(console.log("THREE.GLTFLoader: Duplicating UVs to support aoMap."),geometry.addAttribute("uv2",new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(geometry.attributes.uv.array,2))),material.isGLTFSpecularGlossinessMaterial&&(mesh.onBeforeRender=extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms),mesh.material=material},GLTFParser.prototype.loadMaterial=function(materialIndex){var materialType,json=this.json,extensions=this.extensions,materialDef=json.materials[materialIndex],materialParams={},materialExtensions=materialDef.extensions||{},pending=[];if(materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]){var sgExtension=extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];materialType=sgExtension.getMaterialType(),pending.push(sgExtension.extendParams(materialParams,materialDef,this))}else if(materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]){var kmuExtension=extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];materialType=kmuExtension.getMaterialType(),pending.push(kmuExtension.extendParams(materialParams,materialDef,this))}else{materialType=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial;var metallicRoughness=materialDef.pbrMetallicRoughness||{};if(materialParams.color=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(1,1,1),materialParams.opacity=1,Array.isArray(metallicRoughness.baseColorFactor)){var array=metallicRoughness.baseColorFactor;materialParams.color.fromArray(array),materialParams.opacity=array[3]}void 0!==metallicRoughness.baseColorTexture&&pending.push(this.assignTexture(materialParams,"map",metallicRoughness.baseColorTexture)),materialParams.metalness=void 0!==metallicRoughness.metallicFactor?metallicRoughness.metallicFactor:1,materialParams.roughness=void 0!==metallicRoughness.roughnessFactor?metallicRoughness.roughnessFactor:1,void 0!==metallicRoughness.metallicRoughnessTexture&&(pending.push(this.assignTexture(materialParams,"metalnessMap",metallicRoughness.metallicRoughnessTexture)),pending.push(this.assignTexture(materialParams,"roughnessMap",metallicRoughness.metallicRoughnessTexture)))}!0===materialDef.doubleSided&&(materialParams.side=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.DoubleSide);var alphaMode=materialDef.alphaMode||ALPHA_MODES_OPAQUE;return alphaMode===ALPHA_MODES_BLEND?materialParams.transparent=!0:(materialParams.transparent=!1,alphaMode===ALPHA_MODES_MASK&&(materialParams.alphaTest=void 0!==materialDef.alphaCutoff?materialDef.alphaCutoff:.5)),void 0!==materialDef.normalTexture&&materialType!==_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial&&(pending.push(this.assignTexture(materialParams,"normalMap",materialDef.normalTexture)),materialParams.normalScale=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector2(1,1),void 0!==materialDef.normalTexture.scale&&materialParams.normalScale.set(materialDef.normalTexture.scale,materialDef.normalTexture.scale)),void 0!==materialDef.occlusionTexture&&materialType!==_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial&&(pending.push(this.assignTexture(materialParams,"aoMap",materialDef.occlusionTexture)),void 0!==materialDef.occlusionTexture.strength&&(materialParams.aoMapIntensity=materialDef.occlusionTexture.strength)),void 0!==materialDef.emissiveFactor&&materialType!==_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial&&(materialParams.emissive=(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color).fromArray(materialDef.emissiveFactor)),void 0!==materialDef.emissiveTexture&&materialType!==_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial&&pending.push(this.assignTexture(materialParams,"emissiveMap",materialDef.emissiveTexture)),Promise.all(pending).then((function(){var material;return material=materialType===_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial?extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams):new materialType(materialParams),void 0!==materialDef.name&&(material.name=materialDef.name),material.map&&(material.map.encoding=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.sRGBEncoding),material.emissiveMap&&(material.emissiveMap.encoding=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.sRGBEncoding),material.specularMap&&(material.specularMap.encoding=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.sRGBEncoding),assignExtrasToUserData(material,materialDef),materialDef.extensions&&addUnknownExtensionsToUserData(extensions,material,materialDef),material}))},GLTFParser.prototype.loadGeometries=function(primitives){var parser=this,extensions=this.extensions,cache=this.primitiveCache;function createDracoPrimitive(primitive){return extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(primitive,parser).then((function(geometry){return addPrimitiveAttributes(geometry,primitive,parser)}))}for(var primitiveDef,dracoExtension,pending=[],i=0,il=primitives.length;i<il;i++){var geometryPromise,primitive=primitives[i],cacheKey=(dracoExtension=void 0,(dracoExtension=(primitiveDef=primitive).extensions&&primitiveDef.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION])?"draco:"+dracoExtension.bufferView+":"+dracoExtension.indices+":"+createAttributesKey(dracoExtension.attributes):primitiveDef.indices+":"+createAttributesKey(primitiveDef.attributes)+":"+primitiveDef.mode),cached=cache[cacheKey];if(cached)pending.push(cached.promise);else geometryPromise=primitive.extensions&&primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]?createDracoPrimitive(primitive):addPrimitiveAttributes(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.BufferGeometry,primitive,parser),cache[cacheKey]={primitive:primitive,promise:geometryPromise},pending.push(geometryPromise)}return Promise.all(pending)},GLTFParser.prototype.loadMesh=function(meshIndex){for(var parser=this,meshDef=this.json.meshes[meshIndex],primitives=meshDef.primitives,pending=[],i=0,il=primitives.length;i<il;i++){var material=void 0===primitives[i].material?defaultMaterial=defaultMaterial||new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FrontSide}):this.getDependency("material",primitives[i].material);pending.push(material)}return Promise.all(pending).then((function(originalMaterials){return parser.loadGeometries(primitives).then((function(geometries){for(var meshes=[],i=0,il=geometries.length;i<il;i++){var mesh,geometry=geometries[i],primitive=primitives[i],material=originalMaterials[i];if(primitive.mode===WEBGL_CONSTANTS_TRIANGLES||primitive.mode===WEBGL_CONSTANTS_TRIANGLE_STRIP||primitive.mode===WEBGL_CONSTANTS_TRIANGLE_FAN||void 0===primitive.mode)!0!==(mesh=!0===meshDef.isSkinnedMesh?new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.SkinnedMesh(geometry,material):new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(geometry,material)).isSkinnedMesh||mesh.geometry.attributes.skinWeight.normalized||mesh.normalizeSkinWeights(),primitive.mode===WEBGL_CONSTANTS_TRIANGLE_STRIP?mesh.drawMode=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.TriangleStripDrawMode:primitive.mode===WEBGL_CONSTANTS_TRIANGLE_FAN&&(mesh.drawMode=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.TriangleFanDrawMode);else if(primitive.mode===WEBGL_CONSTANTS_LINES)mesh=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.LineSegments(geometry,material);else if(primitive.mode===WEBGL_CONSTANTS_LINE_STRIP)mesh=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Line(geometry,material);else if(primitive.mode===WEBGL_CONSTANTS_LINE_LOOP)mesh=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.LineLoop(geometry,material);else{if(primitive.mode!==WEBGL_CONSTANTS_POINTS)throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+primitive.mode);mesh=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Points(geometry,material)}Object.keys(mesh.geometry.morphAttributes).length>0&&updateMorphTargets(mesh,meshDef),mesh.name=meshDef.name||"mesh_"+meshIndex,geometries.length>1&&(mesh.name+="_"+i),assignExtrasToUserData(mesh,meshDef),parser.assignFinalMaterial(mesh),meshes.push(mesh)}if(1===meshes.length)return meshes[0];var group=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Group;for(i=0,il=meshes.length;i<il;i++)group.add(meshes[i]);return group}))}))},GLTFParser.prototype.loadCamera=function(cameraIndex){var camera,cameraDef=this.json.cameras[cameraIndex],params=cameraDef[cameraDef.type];if(params)return"perspective"===cameraDef.type?camera=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera(_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Math.radToDeg(params.yfov),params.aspectRatio||1,params.znear||1,params.zfar||2e6):"orthographic"===cameraDef.type&&(camera=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.OrthographicCamera(params.xmag/-2,params.xmag/2,params.ymag/2,params.ymag/-2,params.znear,params.zfar)),void 0!==cameraDef.name&&(camera.name=cameraDef.name),assignExtrasToUserData(camera,cameraDef),Promise.resolve(camera);console.warn("THREE.GLTFLoader: Missing camera parameters.")},GLTFParser.prototype.loadSkin=function(skinIndex){var skinDef=this.json.skins[skinIndex],skinEntry={joints:skinDef.joints};return void 0===skinDef.inverseBindMatrices?Promise.resolve(skinEntry):this.getDependency("accessor",skinDef.inverseBindMatrices).then((function(accessor){return skinEntry.inverseBindMatrices=accessor,skinEntry}))},GLTFParser.prototype.loadAnimation=function(animationIndex){for(var animationDef=this.json.animations[animationIndex],pendingNodes=[],pendingInputAccessors=[],pendingOutputAccessors=[],pendingSamplers=[],pendingTargets=[],i=0,il=animationDef.channels.length;i<il;i++){var channel=animationDef.channels[i],sampler=animationDef.samplers[channel.sampler],target=channel.target,name=void 0!==target.node?target.node:target.id,input=void 0!==animationDef.parameters?animationDef.parameters[sampler.input]:sampler.input,output=void 0!==animationDef.parameters?animationDef.parameters[sampler.output]:sampler.output;pendingNodes.push(this.getDependency("node",name)),pendingInputAccessors.push(this.getDependency("accessor",input)),pendingOutputAccessors.push(this.getDependency("accessor",output)),pendingSamplers.push(sampler),pendingTargets.push(target)}return Promise.all([Promise.all(pendingNodes),Promise.all(pendingInputAccessors),Promise.all(pendingOutputAccessors),Promise.all(pendingSamplers),Promise.all(pendingTargets)]).then((function(dependencies){for(var nodes=dependencies[0],inputAccessors=dependencies[1],outputAccessors=dependencies[2],samplers=dependencies[3],targets=dependencies[4],tracks=[],i=0,il=nodes.length;i<il;i++){var node=nodes[i],inputAccessor=inputAccessors[i],outputAccessor=outputAccessors[i],sampler=samplers[i],target=targets[i];if(void 0!==node){var TypedKeyframeTrack;switch(node.updateMatrix(),node.matrixAutoUpdate=!0,PATH_PROPERTIES[target.path]){case PATH_PROPERTIES.weights:TypedKeyframeTrack=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NumberKeyframeTrack;break;case PATH_PROPERTIES.rotation:TypedKeyframeTrack=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.QuaternionKeyframeTrack;break;case PATH_PROPERTIES.position:case PATH_PROPERTIES.scale:default:TypedKeyframeTrack=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.VectorKeyframeTrack}var targetName=node.name?node.name:node.uuid,interpolation=void 0!==sampler.interpolation?INTERPOLATION[sampler.interpolation]:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.InterpolateLinear,targetNames=[];PATH_PROPERTIES[target.path]===PATH_PROPERTIES.weights?node.traverse((function(object){!0===object.isMesh&&object.morphTargetInfluences&&targetNames.push(object.name?object.name:object.uuid)})):targetNames.push(targetName);var outputArray=outputAccessor.array;if(outputAccessor.normalized){var scale;if(outputArray.constructor===Int8Array)scale=1/127;else if(outputArray.constructor===Uint8Array)scale=1/255;else if(outputArray.constructor==Int16Array)scale=1/32767;else{if(outputArray.constructor!==Uint16Array)throw new Error("THREE.GLTFLoader: Unsupported output accessor component type.");scale=1/65535}for(var scaled=new Float32Array(outputArray.length),j=0,jl=outputArray.length;j<jl;j++)scaled[j]=outputArray[j]*scale;outputArray=scaled}for(j=0,jl=targetNames.length;j<jl;j++){var track=new TypedKeyframeTrack(targetNames[j]+"."+PATH_PROPERTIES[target.path],inputAccessor.array,outputArray,interpolation);"CUBICSPLINE"===sampler.interpolation&&(track.createInterpolant=function InterpolantFactoryMethodGLTFCubicSpline(result){return new GLTFCubicSplineInterpolant(this.times,this.values,this.getValueSize()/3,result)},track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0),tracks.push(track)}}}var name=void 0!==animationDef.name?animationDef.name:"animation_"+animationIndex;return new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.AnimationClip(name,void 0,tracks)}))},GLTFParser.prototype.loadNode=function(nodeIndex){var pending,json=this.json,extensions=this.extensions,parser=this,meshReferences=json.meshReferences,meshUses=json.meshUses,nodeDef=json.nodes[nodeIndex];return(pending=[],void 0!==nodeDef.mesh&&pending.push(parser.getDependency("mesh",nodeDef.mesh).then((function(mesh){var node;if(meshReferences[nodeDef.mesh]>1){var instanceNum=meshUses[nodeDef.mesh]++;(node=mesh.clone()).name+="_instance_"+instanceNum,node.onBeforeRender=mesh.onBeforeRender;for(var i=0,il=node.children.length;i<il;i++)node.children[i].name+="_instance_"+instanceNum,node.children[i].onBeforeRender=mesh.children[i].onBeforeRender}else node=mesh;return void 0!==nodeDef.weights&&node.traverse((function(o){if(o.isMesh)for(var i=0,il=nodeDef.weights.length;i<il;i++)o.morphTargetInfluences[i]=nodeDef.weights[i]})),node}))),void 0!==nodeDef.camera&&pending.push(parser.getDependency("camera",nodeDef.camera)),nodeDef.extensions&&nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL]&&void 0!==nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light&&pending.push(parser.getDependency("light",nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light)),Promise.all(pending)).then((function(objects){var node;if((node=!0===nodeDef.isBone?new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Bone:objects.length>1?new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Group:1===objects.length?objects[0]:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Object3D)!==objects[0])for(var i=0,il=objects.length;i<il;i++)node.add(objects[i]);if(void 0!==nodeDef.name&&(node.userData.name=nodeDef.name,node.name=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.PropertyBinding.sanitizeNodeName(nodeDef.name)),assignExtrasToUserData(node,nodeDef),nodeDef.extensions&&addUnknownExtensionsToUserData(extensions,node,nodeDef),void 0!==nodeDef.matrix){var matrix=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Matrix4;matrix.fromArray(nodeDef.matrix),node.applyMatrix(matrix)}else void 0!==nodeDef.translation&&node.position.fromArray(nodeDef.translation),void 0!==nodeDef.rotation&&node.quaternion.fromArray(nodeDef.rotation),void 0!==nodeDef.scale&&node.scale.fromArray(nodeDef.scale);return node}))},GLTFParser.prototype.loadScene=function(){function buildNodeHierachy(nodeId,parentObject,json,parser){var nodeDef=json.nodes[nodeId];return parser.getDependency("node",nodeId).then((function(node){return void 0===nodeDef.skin?node:parser.getDependency("skin",nodeDef.skin).then((function(skin){for(var pendingJoints=[],i=0,il=(skinEntry=skin).joints.length;i<il;i++)pendingJoints.push(parser.getDependency("node",skinEntry.joints[i]));return Promise.all(pendingJoints)})).then((function(jointNodes){return node.traverse((function(mesh){if(mesh.isMesh){for(var bones=[],boneInverses=[],j=0,jl=jointNodes.length;j<jl;j++){var jointNode=jointNodes[j];if(jointNode){bones.push(jointNode);var mat=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Matrix4;void 0!==skinEntry.inverseBindMatrices&&mat.fromArray(skinEntry.inverseBindMatrices.array,16*j),boneInverses.push(mat)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',skinEntry.joints[j])}mesh.bind(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Skeleton(bones,boneInverses),mesh.matrixWorld)}})),node}));var skinEntry})).then((function(node){parentObject.add(node);var pending=[];if(nodeDef.children)for(var children=nodeDef.children,i=0,il=children.length;i<il;i++){var child=children[i];pending.push(buildNodeHierachy(child,node,json,parser))}return Promise.all(pending)}))}return function loadScene(sceneIndex){var json=this.json,extensions=this.extensions,sceneDef=this.json.scenes[sceneIndex],scene=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Scene;void 0!==sceneDef.name&&(scene.name=sceneDef.name),assignExtrasToUserData(scene,sceneDef),sceneDef.extensions&&addUnknownExtensionsToUserData(extensions,scene,sceneDef);for(var nodeIds=sceneDef.nodes||[],pending=[],i=0,il=nodeIds.length;i<il;i++)pending.push(buildNodeHierachy(nodeIds[i],scene,json,this));return Promise.all(pending).then((function(){return scene}))}}(),GLTFLoader}()}}]);
//# sourceMappingURL=58.591c2c407b4691f5f6cc.bundle.js.map