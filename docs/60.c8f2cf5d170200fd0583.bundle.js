(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{195:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var three__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(366),stats_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(367),dat_gui__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(368);__webpack_exports__.default=function(){var VIEWPORT_W=window.innerWidth,VIEWPORT_H=window.innerHeight,scene=new three__WEBPACK_IMPORTED_MODULE_0__.Scene,camera=new three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera(45,VIEWPORT_W/VIEWPORT_H,.1,1e3);camera.position.x=-30,camera.position.y=40,camera.position.z=50,camera.lookAt(new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(-20,0,0));var renderer=new three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderer;renderer.setClearColor(new three__WEBPACK_IMPORTED_MODULE_0__.Color(15658734)),renderer.setSize(VIEWPORT_W,VIEWPORT_H),renderer.shadowMap.enabled=!0;var createMesh=function(geom){var meshMaterial=new three__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial({vertexColors:three__WEBPACK_IMPORTED_MODULE_0__.VertexColors,wireframe:!0,wireframeLinewidth:2,color:11184810});return meshMaterial.side=three__WEBPACK_IMPORTED_MODULE_0__.DoubleSide,new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(geom,meshMaterial)},knot=createMesh(new three__WEBPACK_IMPORTED_MODULE_0__.TorusKnotGeometry(10,1,64,8,2,3));scene.add(knot),document.getElementById("WebGL-output").appendChild(renderer.domElement);var statsObj,loadedMesh,stats=((statsObj=new stats_js__WEBPACK_IMPORTED_MODULE_1__).showPanel(0),statsObj.dom.style.position="absolute",statsObj.dom.style.left="0px",statsObj.dom.style.top="0px",document.getElementById("Stats-output").appendChild(statsObj.dom),statsObj),controls={radius:knot.geometry.parameters.radius,tube:.3,radialSegments:knot.geometry.parameters.radialSegments,tubularSegments:knot.geometry.parameters.tubularSegments,p:knot.geometry.parameters.p,q:knot.geometry.parameters.q,redraw:function(){scene.remove(knot),knot=createMesh(new three__WEBPACK_IMPORTED_MODULE_0__.TorusKnotGeometry(controls.radius,controls.tube,Math.round(controls.radialSegments),Math.round(controls.tubularSegments),Math.round(controls.p),Math.round(controls.q))),scene.add(knot)},save:function(){var result=knot.toJSON();localStorage.setItem("json",JSON.stringify(result))},load:function(){scene.remove(loadedMesh);var json=localStorage.getItem("json");if(json){var loadedGeometry=JSON.parse(json),loader=new three__WEBPACK_IMPORTED_MODULE_0__.ObjectLoader;(loadedMesh=loader.parse(loadedGeometry)).position.x-=50,scene.add(loadedMesh)}}},gui=new dat_gui__WEBPACK_IMPORTED_MODULE_2__.a,ioGui=gui.addFolder("Save & Load");ioGui.add(controls,"save").onChange(controls.save),ioGui.add(controls,"load").onChange(controls.load);var meshGui=gui.addFolder("mesh");meshGui.add(controls,"radius",0,40).onChange(controls.redraw),meshGui.add(controls,"tube",0,40).onChange(controls.redraw),meshGui.add(controls,"radialSegments",0,400).step(1).onChange(controls.redraw),meshGui.add(controls,"tubularSegments",1,20).step(1).onChange(controls.redraw),meshGui.add(controls,"p",1,10).step(1).onChange(controls.redraw),meshGui.add(controls,"q",1,15).step(1).onChange(controls.redraw),window.addEventListener("resize",function(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)},!1);var step=0,renderScene=function(){stats.update(),knot.rotation.y=step+=.01,requestAnimationFrame(renderScene),renderer.render(scene,camera)};controls.redraw(),renderScene()}}}]);
//# sourceMappingURL=60.c8f2cf5d170200fd0583.bundle.js.map