{"version":3,"file":"75.3c5fc071e544c77027a1.bundle.js","sources":["webpack:///./src/appendix-B/1.ts"],"sourcesContent":["import * as THREE from 'three';\r\n// import 'imports-loader?THREE=three!../../node_modules/three/examples/js/libs/mmdparser.min.js';\r\nimport 'imports-loader?THREE=three!../../node_modules/three/examples/js/loaders/TGALoader.js';\r\nimport 'imports-loader?THREE=three!../../node_modules/three/examples/js/loaders/MMDLoader.js';\r\n\r\n(window as any).MMDParser = require('../../node_modules/three/examples/js/libs/mmdparser.min.js');\r\n\r\nexport default () => {\r\n  // 画面サイズ\r\n  const VIEWPORT_W = window.innerWidth;\r\n  const VIEWPORT_H = window.innerHeight;\r\n\r\n  /* scene */\r\n  const scene = new THREE.Scene();\r\n\r\n  /* camera */\r\n  const camera = new THREE.PerspectiveCamera(\r\n    45,\r\n    VIEWPORT_W / VIEWPORT_H,\r\n    1,\r\n    2000\r\n  );\r\n  camera.position.z = 30;\r\n  camera.lookAt(scene.position);\r\n\r\n  /* renderer */\r\n  const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(VIEWPORT_W, VIEWPORT_H);\r\n  renderer.setClearColor(new THREE.Color(0xffffff));\r\n\r\n  const ambient = new THREE.AmbientLight(0x888888);\r\n  scene.add(ambient);\r\n  const directionalLight = new THREE.DirectionalLight(0x666666);\r\n  directionalLight.position.set(-1, 1, 1).normalize();\r\n  scene.add(directionalLight);\r\n\r\n  let mesh: THREE.Mesh;\r\n  const loader = new (THREE as any).MMDLoader();\r\n\r\n  loader.load(\r\n    'model/kizunaai.pmx',\r\n    (object: THREE.Mesh) => {\r\n      mesh = object;\r\n      mesh.position.y = -10;\r\n      scene.add(mesh);\r\n    },\r\n    xhr => {\r\n      if (xhr.lengthComputable) {\r\n        const percentComplete = (xhr.loaded / xhr.total) * 100;\r\n        console.log(Math.round(percentComplete) + '% downloaded');\r\n      }\r\n    },\r\n    error => {\r\n      console.log('ERROR:', error);\r\n    }\r\n  );\r\n\r\n  document.getElementById('WebGL-output').appendChild(renderer.domElement);\r\n\r\n  /* resize */\r\n  window.addEventListener(\r\n    'resize',\r\n    () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    },\r\n    false\r\n  );\r\n\r\n  /* render */\r\n  const renderScene = () => {\r\n    camera.lookAt(scene.position);\r\n\r\n    requestAnimationFrame(renderScene);\r\n    renderer.render(scene, camera);\r\n  };\r\n  renderScene();\r\n\r\n  /* copyright */\r\n  const copyright = document.createElement('span');\r\n  copyright.innerHTML = '© Kizuna AI';\r\n  copyright.className = 'copyright';\r\n  document.body.appendChild(copyright);\r\n};\r\n"],"mappings":"AAAA","sourceRoot":""}