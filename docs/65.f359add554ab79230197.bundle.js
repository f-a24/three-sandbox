(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{719:function(module,exports,__webpack_require__){var f;module.exports=((f=function(){function e(a){return c.appendChild(a.dom),a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?"block":"none";l=a}var l=0,c=document.createElement("div");c.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",c.addEventListener("click",(function(a){a.preventDefault(),u(++l%c.children.length)}),!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel("FPS","#0ff","#002")),h=e(new f.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var t=e(new f.Panel("MB","#f08","#201"));return u(0),{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();if(h.update(c-k,200),c>g+1e3&&(r.update(1e3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}}).Panel=function(e,f,l){var c=1/0,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement("canvas");q.width=r,q.height=h,q.style.cssText="width:80px;height:48px";var b=q.getContext("2d");return b.font="bold "+9*a+"px Helvetica,Arial,sans-serif",b.textBaseline="top",b.fillStyle=l,b.fillRect(0,0,r,h),b.fillStyle=f,b.fillText(e,t,v),b.fillRect(d,m,n,p),b.fillStyle=l,b.globalAlpha=.9,b.fillRect(d,m,n,p),{dom:q,update:function(h,w){c=Math.min(c,h),k=Math.max(k,h),b.fillStyle=l,b.globalAlpha=1,b.fillRect(0,0,r,m),b.fillStyle=f,b.fillText(g(h)+" "+e+" ("+g(c)+"-"+g(k)+")",t,v),b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p),b.fillRect(d+n-a,m,a,p),b.fillStyle=l,b.globalAlpha=.9,b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}},f)},799:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return WebGLDeferredRenderer}));var _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(718),_postprocessing_EffectComposer_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(728),_postprocessing_ShaderPass_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(727),_postprocessing_RenderPass_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(729),_shaders_FXAAShader_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(778),_shaders_CopyShader_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(725),WebGLDeferredRenderer=function(parameters){parameters=parameters||{};var _context,_state,_width,_height,_compColor,_passColor,_passForward,_passCopy,_compReconstruction,_passReconstruction,_compNormalDepth,_compLight,_compFinal,_passNormalDepth,_passLight,_passLightFullscreen,_passFinal,_passFXAA,_depthTexture,_currentCamera,_lightScene,_lightFullscreenScene,_this=this,_antialias=!1,_hasTransparentObject=!1,_lightPrePass=!1,_cacheKeepAlive=!1,_tmpMaterial=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial({visible:!1}),_tmpVector3=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3,_lightScenesCache={},_lightFullscreenScenesCache={},_normalDepthMaterialsCache={},_normalDepthShininessMaterialsCache={},_colorMaterialsCache={},_reconstructionMaterialsCache={},_deferredLightsCache={},_classicDeferredLightMaterialsCache={},_lightPrePassMaterialsCache={},_removeThresholdCount=60,_originalMaterialsTable={},_originalOnBeforeRendersTable={},_originalVisibleTable={};function initLightScene(scene){var lightSceneData=_lightScenesCache[scene.uuid],lightFullscreenSceneData=_lightFullscreenScenesCache[scene.uuid];void 0===lightSceneData&&((s=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Scene).userData.lights={},(lightSceneData=createCacheData()).scene=s,_lightScenesCache[scene.uuid]=lightSceneData);if(void 0===lightFullscreenSceneData){var s;(s=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Scene).userData.lights={};var emissiveLight=function createDeferredEmissiveLight(){var shader=ShaderDeferred.emissiveLight,material=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial({uniforms:Object.assign({},shader.uniforms),vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader,blending:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NoBlending,depthWrite:!1}),geometry=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.PlaneBufferGeometry(2,2),mesh=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(geometry,material);return mesh.onBeforeRender=function(renderer,scene,camera,geometry,material){material.uniforms.samplerColor.value=_compColor.renderTarget2.texture},mesh}();s.userData.emissiveLight=emissiveLight,s.add(emissiveLight),(lightFullscreenSceneData=createCacheData()).scene=s,_lightFullscreenScenesCache[scene.uuid]=lightFullscreenSceneData}lightSceneData.used=!0,lightFullscreenSceneData.used=!0;var lightScene=lightSceneData.scene,lightFullscreenScene=lightFullscreenSceneData.scene;lightFullscreenScene.userData.emissiveLight.visible=!_lightPrePass,_lightScene=lightScene,_lightFullscreenScene=lightFullscreenScene}function getMaterialFromCacheOrCreate(originalMaterial,cache,createFunc,updateFunc){var data=cache[originalMaterial.uuid];return void 0===data&&((data=createCacheData()).material=createFunc(originalMaterial),cache[originalMaterial.uuid]=data),data.used=!0,updateFunc(data.material,originalMaterial),_originalMaterialsTable[data.material.uuid]=originalMaterial,data.material}function overrideMaterialAndOnBeforeRender(object,getMaterialFunc,onBeforeRender){if(void 0!==object.material){if(Array.isArray(object.material))for(var i=0,il=object.material.length;i<il;i++)object.material[i]=getMaterialFunc(object.material[i]);else object.material=getMaterialFunc(object.material);object.onBeforeRender=onBeforeRender}}function restoreOriginalMaterial(object){if(void 0!==object.material)if(Array.isArray(object.material))for(var i=0,il=object.material.length;i<il;i++)object.material[i]=_originalMaterialsTable[object.material[i].uuid];else object.material=_originalMaterialsTable[object.material.uuid]}function setMaterialNormalDepth(object){overrideMaterialAndOnBeforeRender(object,getNormalDepthMaterial,updateDeferredNormalDepthUniforms)}function getNormalDepthMaterial(originalMaterial){return getMaterialFromCacheOrCreate(originalMaterial,_lightPrePass?_normalDepthShininessMaterialsCache:_normalDepthMaterialsCache,createDeferredNormalDepthMaterial,updateDeferredNormalDepthMaterial)}function createDeferredNormalDepthMaterial(){var shader=_lightPrePass?ShaderDeferred.normalDepthShininess:ShaderDeferred.normalDepth;return new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial({uniforms:Object.assign({},shader.uniforms),fragmentShader:shader.fragmentShader,vertexShader:shader.vertexShader,blending:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NoBlending})}function updateDeferredNormalDepthMaterial(material,originalMaterial){void 0!==originalMaterial.skinning&&(material.skinning=originalMaterial.skinning),void 0!==originalMaterial.morphTargets&&(material.morphTargets=originalMaterial.morphTargets),!0===originalMaterial.visible?material.visible=!originalMaterial.transparent:material.visible=!1}function updateDeferredNormalDepthUniforms(renderer,scene,camera,geometry,material){if(_lightPrePass){var originalMaterial=_originalMaterialsTable[material.uuid];void 0!==originalMaterial&&void 0!==originalMaterial.shininess&&(material.uniforms.shininess.value=originalMaterial.shininess)}}function setMaterialColor(object){overrideMaterialAndOnBeforeRender(object,getColorMaterial,updateDeferredColorUniforms)}function getColorMaterial(originalMaterial){return getMaterialFromCacheOrCreate(originalMaterial,_colorMaterialsCache,createDeferredColorMaterial,updateDeferredColorMaterial)}function createDeferredColorMaterial(originalMaterial){var shader=ShaderDeferred.color,material=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial({uniforms:Object.assign({},shader.uniforms),fragmentShader:shader.fragmentShader,vertexShader:shader.vertexShader,blending:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NoBlending});return void 0!==originalMaterial.map&&(material.map=originalMaterial.map),material}function updateDeferredColorMaterial(material,originalMaterial){void 0!==originalMaterial.map&&(material.map=originalMaterial.map),void 0!==originalMaterial.skinning&&(material.skinning=originalMaterial.skinning),void 0!==originalMaterial.morphTargets&&(material.morphTargets=originalMaterial.morphTargets),!0===originalMaterial.visible?material.visible=!originalMaterial.transparent:material.visible=!1}function updateDeferredColorUniforms(renderer,scene,camera,geometry,material){var diffuse,emissive,originalMaterial=_originalMaterialsTable[material.uuid],uniforms=material.uniforms;!0===originalMaterial.isMeshBasicMaterial?emissive=originalMaterial.color:(diffuse=originalMaterial.color,emissive=originalMaterial.emissive);var specular=originalMaterial.specular,shininess=originalMaterial.shininess,map=originalMaterial.map;void 0!==diffuse&&uniforms.diffuse.value.copy(diffuse),void 0!==emissive&&uniforms.emissive.value.copy(emissive),void 0!==specular&&uniforms.specular.value.copy(specular),void 0!==shininess&&void 0!==uniforms.shininess&&(uniforms.shininess.value=shininess),void 0!==map&&(uniforms.map.value=map)}function setMaterialReconstruction(object){overrideMaterialAndOnBeforeRender(object,getReconstructionMaterial,updateDeferredReconstructionUniforms)}function getReconstructionMaterial(originalMaterial){return!0===originalMaterial.transparent?(_originalMaterialsTable[originalMaterial.uuid]=originalMaterial,originalMaterial):getMaterialFromCacheOrCreate(originalMaterial,_reconstructionMaterialsCache,createDeferredReconstructionMaterial,updateDeferredReconstructionMaterial)}function createDeferredReconstructionMaterial(originalMaterial){var shader=ShaderDeferred.reconstruction,material=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial({uniforms:Object.assign({},shader.uniforms),fragmentShader:shader.fragmentShader,vertexShader:shader.vertexShader,blending:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NoBlending});return void 0!==originalMaterial.map&&(material.map=originalMaterial.map),material}function updateDeferredReconstructionMaterial(material,originalMaterial){updateDeferredColorMaterial(material,originalMaterial)}function updateDeferredReconstructionUniforms(renderer,scene,camera,geometry,material,group){if(!0!==material.transparent)updateDeferredColorUniforms(0,0,0,0,material),material.uniforms.samplerLight.value=_compLight.renderTarget2.texture;else{var onBeforeRender=_originalOnBeforeRendersTable[this.uuid];onBeforeRender&&onBeforeRender.call(this,renderer,scene,camera,geometry,material,group)}}function setVisibleForForwardRendering(object){if(void 0!==object.material)if(Array.isArray(object.material))for(var i=0,il=object.material.length;i<il;i++)void 0===_originalVisibleTable[object.material[i].uuid]&&(_originalVisibleTable[object.material[i].uuid]=object.material[i].visible,object.material[i].visible=object.material[i].transparent&&object.material[i].visible);else void 0===_originalVisibleTable[object.material.uuid]&&(_originalVisibleTable[object.material.uuid]=object.material.visible,object.material.visible=object.material.transparent&&object.material.visible)}function restoreVisible(object){if(void 0!==object.material)if(Array.isArray(object.material))for(var i=0,il=object.material.length;i<il;i++)object.material[i].visible=_originalVisibleTable[object.material[i].uuid];else object.material.visible=_originalVisibleTable[object.material.uuid]}function createDeferredLight(originalLight){return originalLight.isPointLight?function createDeferredPointLight(light){var mesh=createDeferredLightMesh(light,new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.SphereBufferGeometry(1,16,8));return mesh.onBeforeRender=updateDeferredPointLightUniforms,mesh}(originalLight):originalLight.isSpotLight?function createDeferredSpotLight(light){var mesh=createDeferredLightMesh(light,new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.PlaneBufferGeometry(2,2));return mesh.onBeforeRender=updateDeferredSpotLightUniforms,mesh}(originalLight):originalLight.isDirectionalLight?function createDeferredDirectionalLight(light){var mesh=createDeferredLightMesh(light,new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.PlaneBufferGeometry(2,2));return mesh.onBeforeRender=updateDeferredDirectionalLightUniforms,mesh}(originalLight):null}function createDeferredLightMaterial(originalLight){return originalLight.isPointLight?function createDeferredPointLightMaterial(){var material=createDeferredLightShaderMaterial(_lightPrePass?ShaderDeferred.pointLightPre:ShaderDeferred.pointLight);return material.side=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.BackSide,material.depthFunc=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.GreaterEqualDepth,material}():originalLight.isSpotLight?function createDeferredSpotLightMaterial(){var material=createDeferredLightShaderMaterial(_lightPrePass?ShaderDeferred.spotLightPre:ShaderDeferred.spotLight);return material.depthTest=!1,material}():originalLight.isDirectionalLight?function createDeferredDirectionalLightMaterial(){var material=createDeferredLightShaderMaterial(_lightPrePass?ShaderDeferred.directionalLightPre:ShaderDeferred.directionalLight);return material.depthTest=!1,material}():null}function getDeferredLightMaterial(light){var cache=_lightPrePass?_lightPrePassMaterialsCache:_classicDeferredLightMaterialsCache,data=cache[light.uuid];return void 0===data&&((data=createCacheData()).material=createDeferredLightMaterial(light.userData.originalLight),cache[light.uuid]=data),data.used=!0,data.material}function updateDeferredLight(light){light.userData.originalLight.isPointLight&&function updateDeferredPointLight(light){var originalLight=light.userData.originalLight,distance=originalLight.distance;distance>0&&(light.scale.set(1,1,1).multiplyScalar(distance),light.position.setFromMatrixPosition(originalLight.matrixWorld))}(light)}function createDeferredLightMesh(light,geometry){var mesh=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(geometry,_tmpMaterial);return mesh.userData.originalLight=light,mesh}function createDeferredLightShaderMaterial(shader){var material=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial({uniforms:Object.assign({},shader.uniforms),vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader,transparent:!0,blending:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.AdditiveBlending,depthWrite:!1});return _lightPrePass&&(material.premultipliedAlpha=!0),material}function updateDeferredLightCommonUniforms(uniforms){_lightPrePass?uniforms.samplerNormalDepthShininess.value=_compNormalDepth.renderTarget2.texture:(uniforms.samplerNormalDepth.value=_compNormalDepth.renderTarget2.texture,uniforms.samplerColor.value=_compColor.renderTarget2.texture)}function updateDeferredPointLightUniforms(renderer,scene,camera,geometry,material){var originalLight=this.userData.originalLight,distance=originalLight.distance,uniforms=material.uniforms;uniforms.lightColor.value.copy(originalLight.color),distance>0?(uniforms.lightRadius.value=distance,uniforms.lightIntensity.value=originalLight.intensity,uniforms.lightPositionVS.value.setFromMatrixPosition(originalLight.matrixWorld).applyMatrix4(_currentCamera.matrixWorldInverse)):uniforms.lightRadius.value=1/0,updateDeferredLightCommonUniforms(uniforms)}function updateDeferredSpotLightUniforms(){var originalLight=this.userData.originalLight,uniforms=this.material.uniforms;uniforms.lightAngle.value=originalLight.angle,uniforms.lightColor.value.copy(originalLight.color),uniforms.lightIntensity.value=originalLight.intensity,uniforms.lightPositionVS.value.setFromMatrixPosition(originalLight.matrixWorld).applyMatrix4(_currentCamera.matrixWorldInverse);var vec=uniforms.lightDirectionVS.value,vec2=_tmpVector3;vec.setFromMatrixPosition(originalLight.matrixWorld),vec2.setFromMatrixPosition(originalLight.target.matrixWorld),vec.sub(vec2).normalize().transformDirection(_currentCamera.matrixWorldInverse),updateDeferredLightCommonUniforms(uniforms)}function updateDeferredDirectionalLightUniforms(){var originalLight=this.userData.originalLight,uniforms=this.material.uniforms;uniforms.lightColor.value.copy(originalLight.color),uniforms.lightIntensity.value=originalLight.intensity;var vec=uniforms.lightDirectionVS.value,vec2=_tmpVector3;vec.setFromMatrixPosition(originalLight.matrixWorld),vec2.setFromMatrixPosition(originalLight.target.matrixWorld),vec.sub(vec2).normalize().transformDirection(_currentCamera.matrixWorldInverse),updateDeferredLightCommonUniforms(uniforms)}function saveOriginalOnBeforeRenderAndCheckTransparency(object){if(void 0!==object.material&&(_originalOnBeforeRendersTable[object.uuid]=object.onBeforeRender,!_hasTransparentObject&&!_lightPrePass&&object.visible))if(Array.isArray(object.material)){for(var i=0,il=object.material.length;i<il;i++)if(!0===object.material[i].visible&&!0===object.material[i].transparent){_hasTransparentObject=!0;break}}else!0===object.material.visible&&!0===object.material.transparent&&(_hasTransparentObject=!0)}function restoreOriginalOnBeforeRender(object){void 0!==object.material&&(object.onBeforeRender=_originalOnBeforeRendersTable[object.uuid])}function addDeferredLightsToLightScene(object){if(!0===object.isLight){var data=_deferredLightsCache[object.uuid];void 0===data&&((data=createCacheData()).light=createDeferredLight(object),_deferredLightsCache[object.uuid]=data),data.used=!0;var light=data.light;if(null!==light){var scene=!0===object.isPointLight?_lightScene:_lightFullscreenScene,lights=scene.userData.lights;void 0===lights[light.uuid]&&(scene.add(light),lights[light.uuid]={light:light,found:!0}),lights[light.uuid].found=!0}}}function updateDeferredLightsInLightScene(scene){for(var lights=scene.userData.lights,keys=Object.keys(lights),i=0,il=keys.length;i<il;i++){var key=keys[i];if(!1===lights[key].found)scene.remove(lights[key].light),delete lights[key];else{var light=lights[key].light;light.material=getDeferredLightMaterial(light),updateDeferredLight(light),lights[key].found=!1}}}function createCacheData(){return{used:!0,keepAlive:_cacheKeepAlive,count:0}}function cleanupCache(cache){for(var keys=Object.keys(cache),i=0,il=keys.length;i<il;i++){var key=keys[i];!1===cache[key].used?(cache[key].count++,!1===cache[key].keepAlive&&cache[key].count>_removeThresholdCount&&delete cache[key]):(cache[key].used=!1,cache[key].count=0)}}function cleanupTable(table){for(var keys=Object.keys(table),i=0,il=keys.length;i<il;i++){table[keys[i]]=void 0}}function renderFinal(scene,camera){!_lightPrePass&&_hasTransparentObject&&(scene.traverse(setVisibleForForwardRendering),scene.traverse(restoreOriginalOnBeforeRender),_passForward.scene=scene,_passForward.camera=camera),function enableFinalPasses(){_lightPrePass?(_passForward.enabled=!1,_passCopy.enabled=!1,_passFXAA.enabled=!!_antialias):_hasTransparentObject?_antialias?(_passForward.enabled=!0,_passCopy.enabled=!1,_passFXAA.enabled=!0):(_passForward.enabled=!0,_passCopy.enabled=!0,_passFXAA.enabled=!1):_antialias?(_passForward.enabled=!1,_passCopy.enabled=!1,_passFXAA.enabled=!0):(_passForward.enabled=!1,_passCopy.enabled=!1,_passFXAA.enabled=!1)}(),_this.renderer.autoClearDepth=!1,_this.renderer.autoClearStencil=!1,_compFinal.render(),!_lightPrePass&&_hasTransparentObject&&scene.traverse(restoreVisible)}this.renderer=void 0,this.domElement=void 0,this.forwardRendering=!1,this.setSize=function(width,height){_width=width,_height=height,this.renderer.setSize(_width,_height),_compNormalDepth.setSize(_width,_height),_compColor.setSize(_width,_height),_compLight.setSize(_width,_height),_compReconstruction.setSize(_width,_height),_compFinal.setSize(_width,_height),_depthTexture.image.width=_width,_depthTexture.image.height=_height,_depthTexture.needsUpdate=!0,_passFXAA.uniforms.resolution.value.set(1/_width,1/_height)},this.setAntialias=function(enabled){_antialias=enabled},this.enableLightPrePass=function(enabled){_lightPrePass=enabled,_passFinal.uniforms.samplerResult.value=_lightPrePass?_compReconstruction.renderTarget2.texture:_compLight.renderTarget2.texture},this.render=function(scene,camera){if(this.forwardRendering)this.renderer.render(scene,camera);else{var currentSceneAutoUpdate=scene.autoUpdate,currentAutoClearColor=this.renderer.autoClearColor,currentAutoClearDepth=this.renderer.autoClearDepth,currentAutoClearStencil=this.renderer.autoClearStencil;_currentCamera=camera,initLightScene(scene),scene.autoUpdate=!1,scene.updateMatrixWorld(),_hasTransparentObject=!1,scene.traverse(saveOriginalOnBeforeRenderAndCheckTransparency),function updateDeferredCommonUniforms(camera){var uniforms=ShaderDeferredCommon.commonUniforms;uniforms.viewWidth.value=_width,uniforms.viewHeight.value=_height,uniforms.matProjInverse.value.getInverse(camera.projectionMatrix)}(camera),function renderNormalDepth(scene,camera){scene.traverse(setMaterialNormalDepth),_passNormalDepth.scene=scene,_passNormalDepth.camera=camera,_this.renderer.autoClearDepth=!0,_this.renderer.autoClearStencil=!0,_state.buffers.stencil.setTest(!0),_state.buffers.stencil.setFunc(_context.ALWAYS,1,4294967295),_state.buffers.stencil.setOp(_context.REPLACE,_context.REPLACE,_context.REPLACE),_compNormalDepth.render(),scene.traverse(restoreOriginalMaterial)}(scene,camera),_lightPrePass?(!function renderLightPre(scene,camera){scene.traverse(addDeferredLightsToLightScene),updateDeferredLightsInLightScene(_lightScene),updateDeferredLightsInLightScene(_lightFullscreenScene),_passLight.scene=_lightScene,_passLight.camera=camera,_passLightFullscreen.scene=_lightFullscreenScene,_this.renderer.autoClearDepth=!1,_this.renderer.autoClearStencil=!1,_state.buffers.stencil.setFunc(_context.EQUAL,1,4294967295),_state.buffers.stencil.setOp(_context.KEEP,_context.KEEP,_context.KEEP),_compLight.render()}(scene,camera),function renderReconstruction(scene,camera){scene.traverse(setMaterialReconstruction),_passReconstruction.scene=scene,_passReconstruction.camera=camera,_this.renderer.autoClearDepth=!1,_this.renderer.autoClearStencil=!1,_compReconstruction.render(),_state.buffers.stencil.setTest(!1),scene.traverse(restoreOriginalMaterial)}(scene,camera)):(!function renderColor(scene,camera){scene.traverse(setMaterialColor),_passColor.scene=scene,_passColor.camera=camera,_this.renderer.autoClearDepth=!1,_this.renderer.autoClearStencil=!1,_state.buffers.stencil.setFunc(_context.EQUAL,1,4294967295),_state.buffers.stencil.setOp(_context.KEEP,_context.KEEP,_context.KEEP),_compColor.render(),scene.traverse(restoreOriginalMaterial)}(scene,camera),function renderLight(scene,camera){scene.traverse(addDeferredLightsToLightScene),updateDeferredLightsInLightScene(_lightScene),updateDeferredLightsInLightScene(_lightFullscreenScene),_passLight.scene=_lightScene,_passLight.camera=camera,_passLightFullscreen.scene=_lightFullscreenScene,_this.renderer.autoClearDepth=!1,_this.renderer.autoClearStencil=!1,_compLight.render(),_state.buffers.stencil.setTest(!1)}(scene,camera)),renderFinal(scene,camera),scene.traverse(restoreOriginalOnBeforeRender),function cleanupCaches(){cleanupCache(_lightScenesCache),cleanupCache(_lightFullscreenScenesCache),cleanupCache(_normalDepthMaterialsCache),cleanupCache(_normalDepthShininessMaterialsCache),cleanupCache(_colorMaterialsCache),cleanupCache(_reconstructionMaterialsCache),cleanupCache(_classicDeferredLightMaterialsCache),cleanupCache(_lightPrePassMaterialsCache),cleanupCache(_deferredLightsCache),cleanupTable(_originalMaterialsTable),cleanupTable(_originalOnBeforeRendersTable),cleanupTable(_originalVisibleTable)}(),scene.autoUpdate=currentSceneAutoUpdate,this.renderer.autoClearColor=currentAutoClearColor,this.renderer.autoClearDepth=currentAutoClearDepth,this.renderer.autoClearStencil=currentAutoClearStencil}},function init(parameters){_this.renderer=void 0!==parameters.renderer?parameters.renderer:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderer,_this.domElement=_this.renderer.domElement,_context=_this.renderer.getContext(),_state=_this.renderer.state,_width=void 0!==parameters.width?parameters.width:_this.renderer.getSize(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector2).width,_height=void 0!==parameters.height?parameters.height:_this.renderer.getSize(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector2).height;var antialias=void 0!==parameters.antialias&&parameters.antialias;void 0!==parameters.cacheKeepAlive&&(_cacheKeepAlive=parameters.cacheKeepAlive),function initDepthTexture(){_depthTexture=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.DepthTexture(_width,_height,_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.UnsignedInt248Type,void 0,void 0,void 0,void 0,void 0,void 0,_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.DepthStencilFormat)}(),function initPassNormalDepth(){(_passNormalDepth=new _postprocessing_RenderPass_js__WEBPACK_IMPORTED_MODULE_3__.a).clear=!0;var rt=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget(_width,_height,{minFilter:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NearestFilter,magFilter:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NearestFilter,format:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.RGBAFormat,type:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FloatType,stencilBuffer:!0,depthTexture:_depthTexture});rt.texture.generateMipamps=!1,(_compNormalDepth=new _postprocessing_EffectComposer_js__WEBPACK_IMPORTED_MODULE_1__.a(_this.renderer,rt)).renderToScreen=!1,_compNormalDepth.addPass(_passNormalDepth)}(),function initPassColor(){(_passColor=new _postprocessing_RenderPass_js__WEBPACK_IMPORTED_MODULE_3__.a).clear=!0;var rt=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget(_width,_height,{minFilter:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NearestFilter,magFilter:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NearestFilter,format:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.RGBAFormat,type:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FloatType,depthTexture:_depthTexture});rt.texture.generateMipamps=!1,(_compColor=new _postprocessing_EffectComposer_js__WEBPACK_IMPORTED_MODULE_1__.a(_this.renderer,rt)).renderToScreen=!1,_compColor.addPass(_passColor)}(),function initPassLight(){(_passLightFullscreen=new _postprocessing_RenderPass_js__WEBPACK_IMPORTED_MODULE_3__.a).clear=!0,_passLightFullscreen.camera=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.OrthographicCamera(-1,1,1,-1,0,1),(_passLight=new _postprocessing_RenderPass_js__WEBPACK_IMPORTED_MODULE_3__.a).clear=!1;var rt=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget(_width,_height,{minFilter:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NearestFilter,magFilter:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NearestFilter,format:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.RGBAFormat,type:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FloatType,depthTexture:_depthTexture});rt.texture.generateMipamps=!1,(_compLight=new _postprocessing_EffectComposer_js__WEBPACK_IMPORTED_MODULE_1__.a(_this.renderer,rt)).renderToScreen=!1,_compLight.addPass(_passLightFullscreen),_compLight.addPass(_passLight)}(),function initPassReconstruction(){(_passReconstruction=new _postprocessing_RenderPass_js__WEBPACK_IMPORTED_MODULE_3__.a).clear=!0;var rt=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget(_width,_height,{minFilter:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NearestFilter,magFilter:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NearestFilter,format:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.RGBAFormat,type:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FloatType,depthTexture:_depthTexture});rt.texture.generateMipamps=!1,(_compReconstruction=new _postprocessing_EffectComposer_js__WEBPACK_IMPORTED_MODULE_1__.a(_this.renderer,rt)).renderToScreen=!1,_compReconstruction.addPass(_passReconstruction)}(),function initPassFinal(){(_passFinal=new _postprocessing_ShaderPass_js__WEBPACK_IMPORTED_MODULE_2__.a(ShaderDeferred.final)).clear=!0,_passFinal.uniforms.samplerResult.value=_compLight.renderTarget2.texture,_passFinal.material.blending=_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NoBlending,_passFinal.material.depthWrite=!1,_passFinal.material.depthTest=!1,(_passForward=new _postprocessing_RenderPass_js__WEBPACK_IMPORTED_MODULE_3__.a).clear=!1,_passCopy=new _postprocessing_ShaderPass_js__WEBPACK_IMPORTED_MODULE_2__.a(_shaders_CopyShader_js__WEBPACK_IMPORTED_MODULE_5__.a),_passFXAA=new _postprocessing_ShaderPass_js__WEBPACK_IMPORTED_MODULE_2__.a(_shaders_FXAAShader_js__WEBPACK_IMPORTED_MODULE_4__.a);var rt=new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget(_width,_height,{minFilter:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.NearestFilter,magFilter:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.LinearFilter,format:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.RGBFormat,type:_build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.UnsignedByteType,depthTexture:_depthTexture});rt.texture.generateMipamps=!1,(_compFinal=new _postprocessing_EffectComposer_js__WEBPACK_IMPORTED_MODULE_1__.a(_this.renderer,rt)).addPass(_passFinal),_compFinal.addPass(_passForward),_compFinal.addPass(_passCopy),_compFinal.addPass(_passFXAA)}(),_this.setSize(_width,_height),_this.setAntialias(antialias),_this.enableLightPrePass(!1)}(parameters)},DeferredShaderChunk={packVector3:["float vec3_to_float( vec3 data ) {","\tconst float unit = 255.0/256.0;","\thighp float compressed = fract( data.x * unit ) + floor( data.y * unit * 255.0 ) + floor( data.z * unit * 255.0 ) * 255.0;","\treturn compressed;","}"].join("\n"),unpackFloat:["vec3 float_to_vec3( float data ) {","\tconst float unit = 255.0;","\tvec3 uncompressed;","\tuncompressed.x = fract( data );","\tfloat zInt = floor( data / unit );","\tuncompressed.z = fract( zInt / unit );","\tuncompressed.y = fract( floor( data - ( zInt * unit ) ) / unit );","\treturn uncompressed;","}"].join("\n"),packNormal:["vec2 normal_to_vec2( vec3 normal ) {","\treturn normal.xy / sqrt( normal.z * 8.0 + 8.0 ) + 0.5;","}"].join("\n"),unpackVector2:["vec3 vec2_to_normal( vec2 data ) {","\tvec2 fenc = data * 4.0 - 2.0;","\tfloat f = dot( fenc, fenc );","\tfloat g = sqrt( 1.0 - f / 4.0 );","\tvec3 normal;","\tnormal.xy = fenc * g;","\tnormal.z = 1.0 - f / 2.0;","\treturn normal;","}"].join("\n"),computeTextureCoord:["vec2 texCoord = gl_FragCoord.xy / vec2( viewWidth, viewHeight );"].join("\n"),packNormalDepth:["vec4 packedNormalDepth;","packedNormalDepth.xyz = normal * 0.5 + 0.5;","packedNormalDepth.w = position.z / position.w;"].join("\n"),unpackNormalDepth:["vec4 normalDepthMap = texture2D( samplerNormalDepth, texCoord );","float depth = normalDepthMap.w;","if ( depth == 0.0 ) discard;","vec3 normal = normalDepthMap.xyz * 2.0 - 1.0;"].join("\n"),packNormalDepthShininess:["vec4 packedNormalDepthShininess;","packedNormalDepthShininess.xy = normal_to_vec2( normal );","packedNormalDepthShininess.z = shininess;","packedNormalDepthShininess.w = position.z / position.w;"].join("\n"),unpackNormalDepthShininess:["vec4 normalDepthMap = texture2D( samplerNormalDepthShininess, texCoord );","float depth = normalDepthMap.w;","if ( depth == 0.0 ) discard;","vec3 normal = vec2_to_normal( normalDepthMap.xy );","float shininess = normalDepthMap.z;"].join("\n"),packColor:["vec4 packedColor;","packedColor.x = vec3_to_float( diffuseColor.rgb );","packedColor.y = vec3_to_float( emissiveColor );","packedColor.z = vec3_to_float( specularColor );","packedColor.w = shininess;"].join("\n"),unpackColor:["vec4 colorMap = texture2D( samplerColor, texCoord );","vec3 diffuseColor = float_to_vec3( colorMap.x );","vec3 emissiveColor = float_to_vec3( colorMap.y );","vec3 specularColor = float_to_vec3( colorMap.z );","float shininess = colorMap.w;"].join("\n"),packLight:["vec4 packedLight;","packedLight.xyz = lightIntensity * lightColor * max( dot( lightVector, normal ), 0.0 ) * attenuation;","packedLight.w = lightIntensity * specular * max( dot( lightVector, normal ), 0.0 ) * attenuation;"].join("\n"),computeVertexPositionVS:["vec2 xy = texCoord * 2.0 - 1.0;","vec4 vertexPositionProjected = vec4( xy, depth, 1.0 );","vec4 vertexPositionVS = matProjInverse * vertexPositionProjected;","vertexPositionVS.xyz /= vertexPositionVS.w;","vertexPositionVS.w = 1.0;"].join("\n"),computeSpecular:["vec3 halfVector = normalize( lightVector - normalize( vertexPositionVS.xyz ) );","float dotNormalHalf = max( dot( normal, halfVector ), 0.0 );","float specular = 0.31830988618 * ( shininess * 0.5 + 1.0 ) * pow( dotNormalHalf, shininess );"].join("\n"),combine:["gl_FragColor = vec4( lightIntensity * lightColor * max( dot( lightVector, normal ), 0.0 ) * ( diffuseColor + specular * specularColor ) * attenuation, 1.0 );"].join("\n")},ShaderDeferredCommon={commonUniforms:{matProjInverse:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Matrix4),viewWidth:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(800),viewHeight:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(600)}},ShaderDeferred={normalDepth:{uniforms:{},vertexShader:["varying vec3 vNormal;","varying vec4 vPosition;","#include <morphtarget_pars_vertex>","#include <skinning_pars_vertex>","void main() {","#include <begin_vertex>","#include <beginnormal_vertex>","#include <skinbase_vertex>","#include <skinnormal_vertex>","#include <defaultnormal_vertex>","#include <morphtarget_vertex>","#include <skinning_vertex>","#include <project_vertex>","\tvNormal = normalize( transformedNormal );","\tvPosition = gl_Position;","}"].join("\n"),fragmentShader:["varying vec3 vNormal;","varying vec4 vPosition;","void main() {","\tvec3 normal = vNormal;","\tvec4 position = vPosition;",DeferredShaderChunk.packNormalDepth,"\tgl_FragColor = packedNormalDepth;","}"].join("\n")},color:{uniforms:{map:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),offsetRepeat:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector4(0,0,1,1)),diffuse:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(0)),emissive:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(0)),specular:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(0)),shininess:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(30)},vertexShader:["#include <uv_pars_vertex>","#include <morphtarget_pars_vertex>","#include <skinning_pars_vertex>","void main() {","#include <uv_vertex>","#include <begin_vertex>","#include <beginnormal_vertex>","#include <skinbase_vertex>","#include <skinnormal_vertex>","#include <defaultnormal_vertex>","#include <morphtarget_vertex>","#include <skinning_vertex>","#include <project_vertex>","}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;","#include <uv_pars_fragment>","#include <map_pars_fragment>",DeferredShaderChunk.packVector3,"void main() {","\tvec4 diffuseColor = vec4( diffuse, 1.0 );","\tvec3 emissiveColor = emissive;","\tvec3 specularColor = specular;","#include <map_fragment>",DeferredShaderChunk.packColor,"\tgl_FragColor = packedColor;","}"].join("\n")},emissiveLight:{uniforms:Object.assign({samplerColor:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(null)},ShaderDeferredCommon.commonUniforms),vertexShader:["void main() { ","\tgl_Position = vec4( sign( position.xy ), 0.0, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D samplerColor;","uniform float viewHeight;","uniform float viewWidth;",DeferredShaderChunk.unpackFloat,"void main() {",DeferredShaderChunk.computeTextureCoord,DeferredShaderChunk.unpackColor,"\tgl_FragColor = vec4( emissiveColor, 1.0 );","}"].join("\n")},pointLight:{uniforms:Object.assign({samplerNormalDepth:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),samplerColor:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),lightColor:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(0)),lightPositionVS:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,1,0)),lightIntensity:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(1),lightRadius:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(1)},ShaderDeferredCommon.commonUniforms),vertexShader:["void main() {","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D samplerNormalDepth;","uniform sampler2D samplerColor;","uniform float viewHeight;","uniform float viewWidth;","uniform vec3 lightColor;","uniform vec3 lightPositionVS;","uniform float lightIntensity;","uniform float lightRadius;","uniform mat4 matProjInverse;",DeferredShaderChunk.unpackFloat,"void main() {",DeferredShaderChunk.computeTextureCoord,DeferredShaderChunk.unpackNormalDepth,DeferredShaderChunk.computeVertexPositionVS,"\tvec3 lightVector = lightPositionVS - vertexPositionVS.xyz;","\tfloat distance = length( lightVector );","\tif ( distance > lightRadius ) discard;","\tlightVector = normalize( lightVector );",DeferredShaderChunk.unpackColor,DeferredShaderChunk.computeSpecular,"\t//float cutoff = 0.3;","\t//float denom = distance / lightRadius + 1.0;","\t//float attenuation = 1.0 / ( denom * denom );","\t//attenuation = ( attenuation - cutoff ) / ( 1.0 - cutoff );","\t//attenuation = max( attenuation, 0.0 );","\t//attenuation *= attenuation;","\t//diffuseColor *= saturate( -distance / lightRadius + 1.0 );","\t//float attenuation = 1.0;","\tfloat attenuation = saturate( -distance / lightRadius + 1.0 );",DeferredShaderChunk.combine,"}"].join("\n")},spotLight:{uniforms:Object.assign({samplerNormalDepth:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),samplerColor:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),lightColor:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(0)),lightDirectionVS:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,1,0)),lightPositionVS:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,1,0)),lightAngle:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(1),lightIntensity:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(1)},ShaderDeferredCommon.commonUniforms),vertexShader:["void main() { ","\tgl_Position = vec4( sign( position.xy ), 0.0, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D samplerNormalDepth;","uniform sampler2D samplerColor;","uniform float viewHeight;","uniform float viewWidth;","uniform vec3 lightColor;","uniform vec3 lightPositionVS;","uniform vec3 lightDirectionVS;","uniform float lightAngle;","uniform float lightIntensity;","uniform mat4 matProjInverse;",DeferredShaderChunk.unpackFloat,"void main() {",DeferredShaderChunk.computeTextureCoord,DeferredShaderChunk.unpackNormalDepth,DeferredShaderChunk.computeVertexPositionVS,DeferredShaderChunk.unpackColor,"\tvec3 lightVector = normalize( lightPositionVS.xyz - vertexPositionVS.xyz );","\tfloat rho = dot( lightDirectionVS, lightVector );","\tfloat rhoMax = cos( lightAngle );","\tif ( rho <= rhoMax ) discard;","\tfloat theta = rhoMax + 0.0001;","\tfloat phi = rhoMax + 0.05;","\tfloat falloff = 4.0;","\tfloat spot = 0.0;","\tif ( rho >= phi ) {","\t\tspot = 1.0;","\t} else if ( rho <= theta ) {","\t\tspot = 0.0;","\t} else { ","\t\tspot = pow( ( rho - theta ) / ( phi - theta ), falloff );","\t}","\tdiffuseColor *= spot;",DeferredShaderChunk.computeSpecular,"\tconst float attenuation = 1.0;",DeferredShaderChunk.combine,"}"].join("\n")},directionalLight:{uniforms:Object.assign({samplerNormalDepth:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),samplerColor:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),lightColor:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(0)),lightDirectionVS:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,1,0)),lightIntensity:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(1)},ShaderDeferredCommon.commonUniforms),vertexShader:["void main() { ","\tgl_Position = vec4( sign( position.xy ), 0.0, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D samplerNormalDepth;","uniform sampler2D samplerColor;","uniform float viewHeight;","uniform float viewWidth;","uniform vec3 lightColor;","uniform vec3 lightDirectionVS;","uniform float lightIntensity;","uniform mat4 matProjInverse;",DeferredShaderChunk.unpackFloat,"void main() {",DeferredShaderChunk.computeTextureCoord,DeferredShaderChunk.unpackNormalDepth,DeferredShaderChunk.computeVertexPositionVS,DeferredShaderChunk.unpackColor,"\tvec3 lightVector = normalize( lightDirectionVS );",DeferredShaderChunk.computeSpecular,"\tconst float attenuation = 1.0;",DeferredShaderChunk.combine,"}"].join("\n")},normalDepthShininess:{uniforms:{shininess:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(30)},vertexShader:["varying vec3 vNormal;","varying vec4 vPosition;","#include <morphtarget_pars_vertex>","#include <skinning_pars_vertex>","void main() {","#include <begin_vertex>","#include <beginnormal_vertex>","#include <skinbase_vertex>","#include <skinnormal_vertex>","#include <defaultnormal_vertex>","#include <morphtarget_vertex>","#include <skinning_vertex>","#include <project_vertex>","\tvNormal = normalize( transformedNormal );","\tvPosition = gl_Position;","}"].join("\n"),fragmentShader:["varying vec3 vNormal;","varying vec4 vPosition;","uniform float shininess;",DeferredShaderChunk.packNormal,"void main() {","\tvec3 normal = vNormal;","\tvec4 position = vPosition;",DeferredShaderChunk.packNormalDepthShininess,"\tgl_FragColor = packedNormalDepthShininess;","}"].join("\n")},pointLightPre:{uniforms:Object.assign({samplerNormalDepthShininess:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),lightColor:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(0)),lightPositionVS:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,1,0)),lightIntensity:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(1),lightRadius:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(1)},ShaderDeferredCommon.commonUniforms),vertexShader:["void main() {","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D samplerNormalDepthShininess;","uniform float viewHeight;","uniform float viewWidth;","uniform vec3 lightColor;","uniform vec3 lightPositionVS;","uniform float lightIntensity;","uniform float lightRadius;","uniform mat4 matProjInverse;",DeferredShaderChunk.unpackFloat,DeferredShaderChunk.unpackVector2,"void main() {",DeferredShaderChunk.computeTextureCoord,DeferredShaderChunk.unpackNormalDepthShininess,DeferredShaderChunk.computeVertexPositionVS,"\tvec3 lightVector = lightPositionVS - vertexPositionVS.xyz;","\tfloat distance = length( lightVector );","\tif ( distance > lightRadius ) discard;","\tlightVector = normalize( lightVector );",DeferredShaderChunk.computeSpecular,"\tfloat attenuation = saturate( -distance / lightRadius + 1.0 );",DeferredShaderChunk.packLight,"\tgl_FragColor = packedLight;","}"].join("\n")},spotLightPre:{uniforms:Object.assign({samplerNormalDepthShininess:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),lightColor:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(0)),lightDirectionVS:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,1,0)),lightPositionVS:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,1,0)),lightAngle:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(1),lightIntensity:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(1)},ShaderDeferredCommon.commonUniforms),vertexShader:["void main() { ","\tgl_Position = vec4( sign( position.xy ), 0.0, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D samplerNormalDepthShininess;","uniform float viewHeight;","uniform float viewWidth;","uniform vec3 lightColor;","uniform vec3 lightPositionVS;","uniform vec3 lightDirectionVS;","uniform float lightAngle;","uniform float lightIntensity;","uniform mat4 matProjInverse;",DeferredShaderChunk.unpackFloat,DeferredShaderChunk.unpackVector2,"void main() {",DeferredShaderChunk.computeTextureCoord,DeferredShaderChunk.unpackNormalDepthShininess,DeferredShaderChunk.computeVertexPositionVS,"\tvec3 lightVector = normalize( lightPositionVS.xyz - vertexPositionVS.xyz );","\tfloat rho = dot( lightDirectionVS, lightVector );","\tfloat rhoMax = cos( lightAngle );","\tif ( rho <= rhoMax ) discard;","\tfloat theta = rhoMax + 0.0001;","\tfloat phi = rhoMax + 0.05;","\tfloat falloff = 4.0;","\tfloat spot = 0.0;","\tif ( rho >= phi ) {","\t\tspot = 1.0;","\t} else if ( rho <= theta ) {","\t\tspot = 0.0;","\t} else { ","\t\tspot = pow( ( rho - theta ) / ( phi - theta ), falloff );","\t}",DeferredShaderChunk.computeSpecular,"\tconst float attenuation = 1.0;",DeferredShaderChunk.packLight,"\tgl_FragColor = spot * packedLight;","}"].join("\n")},directionalLightPre:{uniforms:Object.assign({samplerNormalDepthShininess:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),lightColor:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(0)),lightDirectionVS:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,1,0)),lightIntensity:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(1)},ShaderDeferredCommon.commonUniforms),vertexShader:["void main() { ","\tgl_Position = vec4( sign( position.xy ), 0.0, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D samplerNormalDepthShininess;","uniform float viewHeight;","uniform float viewWidth;","uniform vec3 lightColor;","uniform vec3 lightDirectionVS;","uniform float lightIntensity;","uniform mat4 matProjInverse;",DeferredShaderChunk.unpackFloat,DeferredShaderChunk.unpackVector2,"void main() {",DeferredShaderChunk.computeTextureCoord,DeferredShaderChunk.unpackNormalDepthShininess,DeferredShaderChunk.computeVertexPositionVS,"\tvec3 lightVector = normalize( lightDirectionVS );",DeferredShaderChunk.computeSpecular,"\tconst float attenuation = 1.0;",DeferredShaderChunk.packLight,"\tgl_FragColor = packedLight;","}"].join("\n")},reconstruction:{uniforms:Object.assign({samplerLight:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),map:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(null),offsetRepeat:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector4(0,0,1,1)),diffuse:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(0)),emissive:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(0)),specular:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Color(0)),shininess:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(30)},ShaderDeferredCommon.commonUniforms),vertexShader:["#include <uv_pars_vertex>","#include <morphtarget_pars_vertex>","#include <skinning_pars_vertex>","void main() {","#include <uv_vertex>","#include <begin_vertex>","#include <beginnormal_vertex>","#include <skinbase_vertex>","#include <skinnormal_vertex>","#include <defaultnormal_vertex>","#include <morphtarget_vertex>","#include <skinning_vertex>","#include <project_vertex>","}"].join("\n"),fragmentShader:["uniform sampler2D samplerLight;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;","uniform float viewHeight;","uniform float viewWidth;","#include <uv_pars_fragment>","#include <map_pars_fragment>",DeferredShaderChunk.unpackFloat,"void main() {","\tvec4 diffuseColor = vec4( diffuse, 1.0 );","\tvec3 emissiveColor = emissive;","\tvec3 specularColor = specular;",DeferredShaderChunk.computeTextureCoord,"\tvec4 light = texture2D( samplerLight, texCoord );","#include <map_fragment>","\tvec3 diffuseFinal = diffuseColor.rgb * light.rgb;","\tvec3 emissiveFinal = emissiveColor;","\tvec3 specularFinal = specularColor * light.rgb * light.a;","\tgl_FragColor = vec4( diffuseFinal + emissiveFinal + specularFinal, 1.0 );","}"].join("\n")},final:{uniforms:{samplerResult:new _build_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Uniform(null)},vertexShader:["varying vec2 texCoord;","void main() {","\tvec4 pos = vec4( sign( position.xy ), 0.0, 1.0 );","\ttexCoord = pos.xy * vec2( 0.5 ) + 0.5;","\tgl_Position = pos;","}"].join("\n"),fragmentShader:["varying vec2 texCoord;","uniform sampler2D samplerResult;","void main() {","\tgl_FragColor = texture2D( samplerResult, texCoord );","}"].join("\n")}}}}]);
//# sourceMappingURL=65.f359add554ab79230197.bundle.js.map